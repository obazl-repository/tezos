load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_module", "ocaml_ns_library", "ocaml_signature")

ocaml_signature(
    name = "RPC_client__sig",
    src = ":RPC_client.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
    ],
    deps = [
        "@resto-cohttp-self-serving-client//:resto-cohttp-self-serving-client",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_protocol_environment:lib-tezos_protocol_environment",
        "@tezos//src/lib_rpc_http:Tezos_rpc_http",
        "@tezos//src/lib_rpc_http:Tezos_rpc_http_client",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
    ],
)

ocaml_module(
    name = "RPC_client",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
    ],
    sig = ":RPC_client__sig",
    struct = ":RPC_client.ml",
    deps = [
        "@resto-cohttp-self-serving-client//:resto-cohttp-self-serving-client",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_protocol_environment:lib-tezos_protocol_environment",
        "@tezos//src/lib_rpc_http:Tezos_rpc_http",
        "@tezos//src/lib_rpc_http:Tezos_rpc_http_client",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
    ],
)

# okapi:public_name tezos-mockup-proxy
ocaml_ns_library(
    name = "Tezos_mockup_proxy",
    submodules = [":RPC_client"],
    visibility = ["//visibility:public"],
)
