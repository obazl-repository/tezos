load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_module", "ocaml_ns_library", "ocaml_signature")

ocaml_signature(
    name = "RPC_client_sig",
    src = ":RPC_client.mli",
    deps_opam = ["resto-cohttp-self-serving-client"],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
    ],
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
    ],
)

ocaml_module(
    name = "RPC_client",
    deps_opam = ["resto-cohttp-self-serving-client"],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
    ],
    sig = ":RPC_client_sig",
    struct = ":RPC_client.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
    ],
)

ocaml_ns_library(
    name = "#Tezos_mockup_proxy",
    submodules = [":RPC_client"],
    visibility = ["//visibility:public"],
)
