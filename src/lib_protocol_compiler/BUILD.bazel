load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_module", "ocaml_ns_library")

ocaml_module(
    name = "Registerer",
    deps_opam = ["tezos-protocol-environment-sigs"],
    opts = [
        "-opaque",
        "-open",
        "Tezos_base__TzPervasives",
    ],
    struct = ":Registerer.ml",
    deps = ["@tezos//src/lib_base:#Tezos_base"],
)

ocaml_ns_library(
    name = "#Tezos_protocol_registerer",
    submodules = [":Registerer"],
    visibility = ["//visibility:public"],
)

ocaml_module(
    name = "Embedded_cmis",
    deps_opam = [
        "tezos-base.unix",
        "tezos-protocol-environment-sigs",
        "compiler-libs.common",
        "lwt.unix",
        "ocplib-ocamlres",
        "unix",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base_unix",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":Embedded_cmis.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/lib_version:#Tezos_version",
    ],
)

ocaml_module(
    name = "Packer",
    deps_opam = [
        "tezos-base.unix",
        "tezos-protocol-environment-sigs",
        "compiler-libs.common",
        "lwt.unix",
        "ocplib-ocamlres",
        "unix",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base_unix",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":Packer.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/lib_version:#Tezos_version",
    ],
)

ocaml_module(
    name = "Compiler",
    deps_opam = [
        "tezos-base.unix",
        "tezos-protocol-environment-sigs",
        "compiler-libs.common",
        "lwt.unix",
        "ocplib-ocamlres",
        "unix",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base_unix",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":Compiler.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/lib_version:#Tezos_version",
    ],
)

ocaml_ns_library(
    name = "#Tezos_protocol_compiler",
    submodules = [
        ":Compiler",
        ":Embedded_cmis",
        ":Packer",
    ],
    visibility = ["//visibility:public"],
)

ocaml_module(
    name = "Byte",
    deps_opam = ["compiler-libs.bytecomp"],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_protocol_compiler",
    ],
    struct = ":Byte.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_compiler:#Tezos_protocol_compiler",
    ],
)

ocaml_ns_library(
    name = "#Tezos_protocol_compiler_byte",
    submodules = [":Byte"],
    visibility = ["//visibility:public"],
)

ocaml_module(
    name = "Native",
    deps_opam = ["compiler-libs.optcomp"],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_protocol_compiler",
    ],
    struct = ":Native.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_compiler:#Tezos_protocol_compiler",
    ],
)

ocaml_ns_library(
    name = "#Tezos_protocol_compiler_native",
    submodules = [":Native"],
    visibility = ["//visibility:public"],
)
