load("@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_module",
    "ocaml_ns_archive",
    "ocaml_signature",
)

###############################################
########### Archive/Library Targets ###########

######## tezos-micheline ########
TEZOS_MICHELINE_OPTS = [
    "-open", "Data_encoding",
    "-open", "Tezos_error_monad",
    "-open", "Tezos_stdlib",
]

TEZOS_MICHELINE_DEPS = [
    "//src/lib_error_monad:tezos-error-monad",
    "//src/lib_stdlib:tezos-stdlib",
    "@data-encoding//:data-encoding",
    "@ppx_inline_test//:ppx_inline_test",
    "@uutf//:uutf",
    "@zarith//:zarith",
]

ocaml_ns_archive(
    name       = "tezos-micheline",
    ns         = "Tezos_micheline",
    visibility = ["//visibility:public"],
    submodules = [
        ":Micheline",
        ":Micheline_parser",
        ":Micheline_printer",
    ],
)

#############################
####  Singleton Targets  ####

ocaml_module(
    name     = "Micheline",
    struct   = "micheline.ml",
    sig      = ":Micheline_cmi",
    ppx      = ":ppx_tezos_micheline",
    opts     = TEZOS_MICHELINE_OPTS,
    deps     = TEZOS_MICHELINE_DEPS + [
    ]
)

ocaml_signature(
    name     = "Micheline_cmi",
    src      = "micheline.mli",
    ppx      = ":ppx_tezos_micheline",
    opts     = TEZOS_MICHELINE_OPTS,
    deps     = TEZOS_MICHELINE_DEPS + [
    ]
)

ocaml_module(
    name     = "Micheline_parser",
    struct   = "micheline_parser.ml",
    sig      = ":Micheline_parser_cmi",
    ppx      = ":ppx_tezos_micheline",
    opts     = TEZOS_MICHELINE_OPTS,
    deps     = TEZOS_MICHELINE_DEPS + [
       ":Micheline",
    ]
)

ocaml_signature(
    name     = "Micheline_parser_cmi",
    src      = "micheline_parser.mli",
    ppx      = ":ppx_tezos_micheline",
    opts     = TEZOS_MICHELINE_OPTS,
    deps     = TEZOS_MICHELINE_DEPS + [
       ":Micheline",
    ]
)

ocaml_module(
    name     = "Micheline_printer",
    struct   = "micheline_printer.ml",
    sig      = ":Micheline_printer_cmi",
    ppx      = ":ppx_tezos_micheline",
    opts     = TEZOS_MICHELINE_OPTS,
    deps     = TEZOS_MICHELINE_DEPS + [
       ":Micheline",
    ]
)

ocaml_signature(
    name     = "Micheline_printer_cmi",
    src      = "micheline_printer.mli",
    ppx      = ":ppx_tezos_micheline",
    opts     = TEZOS_MICHELINE_OPTS,
    deps     = TEZOS_MICHELINE_DEPS + [
       ":Micheline",
    ]
)

###########################
####  PPX Executables  ####
load("@obazl_rules_ocaml//ocaml:rules.bzl", "ppx_executable")

###############
ppx_executable(
    name    = "ppx_tezos_micheline",
    main    = "@ppx//driver",
    args    = [
        "-inline-test-lib",
        "tezos_micheline",
    ],
    deps = [
        "@ppx_inline_test//:ppx_inline_test",
    ],
)
