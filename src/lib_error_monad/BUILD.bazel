load("@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_module",
    "ocaml_ns_archive",
    "ocaml_signature",
)

###############################################
########### Archive/Library Targets ###########

######## tezos-error-monad ########
TEZOS_ERROR_MONAD_OPTS = [
    "-open", "Data_encoding",
    "-open", "Tezos_stdlib",
]

TEZOS_ERROR_MONAD_DEPS = [
    "//src/lib_lwt_result_stdlib:tezos-lwt-result-stdlib",
    "//src/lib_stdlib:tezos-stdlib",
    "@data-encoding//:data-encoding",
    "@lwt-canceler//:lwt-canceler",
    "@lwt//:lwt",
]

ocaml_ns_archive(
    name       = "tezos-error-monad",
    ns         = "Tezos_error_monad",
    visibility = ["//visibility:public"],
    submodules = [
        ":Core_maker",
        ":Error_monad",
        ":Monad_ext_maker",
        ":Monad_maker",
        ":Sig",
        ":TzCore",
        ":TzLwtreslib",
        ":TzMonad",
        ":TzTrace",
    ],
)

#############################
####  Singleton Targets  ####

ocaml_module(
    name     = "TzCore",
    struct   = "TzCore.ml",
    sig      = ":TzCore_cmi",
    opts     = TEZOS_ERROR_MONAD_OPTS,
    deps     = TEZOS_ERROR_MONAD_DEPS + [
       ":Core_maker",
    ]
)

ocaml_signature(
    name     = "TzCore_cmi",
    src      = "TzCore.mli",
    opts     = TEZOS_ERROR_MONAD_OPTS,
    deps     = TEZOS_ERROR_MONAD_DEPS + [
       ":Sig",
    ]
)

ocaml_module(
    name     = "TzLwtreslib",
    struct   = "TzLwtreslib.ml",
    sig      = ":TzLwtreslib_cmi",
    opts     = TEZOS_ERROR_MONAD_OPTS,
    deps     = TEZOS_ERROR_MONAD_DEPS + [
       ":TzTrace",
    ]
)

ocaml_signature(
    name     = "TzLwtreslib_cmi",
    src      = "TzLwtreslib.mli",
    opts     = TEZOS_ERROR_MONAD_OPTS,
    deps     = TEZOS_ERROR_MONAD_DEPS + [
       ":TzTrace",
    ]
)

ocaml_module(
    name     = "TzMonad",
    struct   = "TzMonad.ml",
    sig      = ":TzMonad_cmi",
    opts     = TEZOS_ERROR_MONAD_OPTS,
    deps     = TEZOS_ERROR_MONAD_DEPS + [
       ":TzTrace",
       ":TzCore",
       ":Monad_maker",
       ":Monad_ext_maker",
    ]
)

ocaml_signature(
    name     = "TzMonad_cmi",
    src      = "TzMonad.mli",
    opts     = TEZOS_ERROR_MONAD_OPTS,
    deps     = TEZOS_ERROR_MONAD_DEPS + [
       ":TzTrace",
       ":TzCore",
       ":Sig",
    ]
)

ocaml_module(
    name     = "TzTrace",
    struct   = "TzTrace.ml",
    sig      = ":TzTrace_cmi",
    opts     = TEZOS_ERROR_MONAD_OPTS,
    deps     = TEZOS_ERROR_MONAD_DEPS + [
    ]
)

ocaml_signature(
    name     = "TzTrace_cmi",
    src      = "TzTrace.mli",
    opts     = TEZOS_ERROR_MONAD_OPTS,
    deps     = TEZOS_ERROR_MONAD_DEPS + [
       ":Sig",
    ]
)

ocaml_module(
    name     = "Core_maker",
    struct   = "core_maker.ml",
    sig      = ":Core_maker_cmi",
    opts     = TEZOS_ERROR_MONAD_OPTS,
    deps     = TEZOS_ERROR_MONAD_DEPS + [
       ":Sig",
    ]
)

ocaml_signature(
    name     = "Core_maker_cmi",
    src      = "core_maker.mli",
    opts     = TEZOS_ERROR_MONAD_OPTS,
    deps     = TEZOS_ERROR_MONAD_DEPS + [
       ":Sig",
    ]
)

ocaml_module(
    name     = "Error_monad",
    struct   = "error_monad.ml",
    sig      = ":Error_monad_cmi",
    opts     = TEZOS_ERROR_MONAD_OPTS,
    deps     = TEZOS_ERROR_MONAD_DEPS + [
       ":TzTrace",
       ":TzMonad",
       ":TzCore",
    ]
)

ocaml_signature(
    name     = "Error_monad_cmi",
    src      = "error_monad.mli",
    opts     = TEZOS_ERROR_MONAD_OPTS,
    deps     = TEZOS_ERROR_MONAD_DEPS + [
       ":TzCore",
       ":Sig",
    ]
)

ocaml_module(
    name     = "Monad_ext_maker",
    struct   = "monad_ext_maker.ml",
    sig      = ":Monad_ext_maker_cmi",
    opts     = TEZOS_ERROR_MONAD_OPTS,
    deps     = TEZOS_ERROR_MONAD_DEPS + [
       ":Sig",
    ]
)

ocaml_signature(
    name     = "Monad_ext_maker_cmi",
    src      = "monad_ext_maker.mli",
    opts     = TEZOS_ERROR_MONAD_OPTS,
    deps     = TEZOS_ERROR_MONAD_DEPS + [
       ":Sig",
    ]
)

ocaml_module(
    name     = "Monad_maker",
    struct   = "monad_maker.ml",
    sig      = ":Monad_maker_cmi",
    opts     = TEZOS_ERROR_MONAD_OPTS,
    deps     = TEZOS_ERROR_MONAD_DEPS + [
       ":Sig",
    ]
)

ocaml_signature(
    name     = "Monad_maker_cmi",
    src      = "monad_maker.mli",
    opts     = TEZOS_ERROR_MONAD_OPTS,
    deps     = TEZOS_ERROR_MONAD_DEPS + [
       ":Sig",
    ]
)

ocaml_module(
    name     = "Sig",
    struct   = "sig.ml",
    opts     = TEZOS_ERROR_MONAD_OPTS,
    deps     = TEZOS_ERROR_MONAD_DEPS + [
    ]
)

