load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_module", "ocaml_ns_library", "ocaml_signature")

ocaml_signature(
    name = "base_samplers__sig",
    src = ":base_samplers.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    deps = [
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "base_samplers",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    sig = ":base_samplers__sig",
    struct = ":base_samplers.ml",
    deps = [
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "benchmark",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":benchmark.ml",
    deps = [
        ":generator",
        ":model",
        ":sparse_vec",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "benchmark_helpers",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":benchmark_helpers.ml",
    deps = [
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "builtin_benchmarks",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":builtin_benchmarks.ml",
    deps = [
        ":benchmark",
        ":free_variable",
        ":generator",
        ":model",
        ":registration",
        ":sparse_vec",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "codegen",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":codegen.ml",
    deps = [
        ":costlang",
        ":fixed_point_transform",
        ":free_variable",
        ":model",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_signature(
    name = "costlang__sig",
    src = ":costlang.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    deps = [
        ":free_variable",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "costlang",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    sig = ":costlang__sig",
    struct = ":costlang.ml",
    deps = [
        ":free_variable",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_signature(
    name = "crypto_samplers__sig",
    src = ":crypto_samplers.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    deps = [
        ":base_samplers",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "crypto_samplers",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    sig = ":crypto_samplers__sig",
    struct = ":crypto_samplers.ml",
    deps = [
        ":base_samplers",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "csv",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":csv.ml",
    deps = [
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "fixed_point_transform",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":fixed_point_transform.ml",
    deps = [
        ":costlang",
        ":free_variable",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_signature(
    name = "free_variable__sig",
    src = ":free_variable.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    deps = [
        ":sparse_vec",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "free_variable",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    sig = ":free_variable__sig",
    struct = ":free_variable.ml",
    deps = [
        ":sparse_vec",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "generator",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":generator.ml",
    deps = [
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "inference",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":inference.ml",
    deps = [
        ":benchmark_helpers",
        ":costlang",
        ":csv",
        ":free_variable",
        ":measure",
        ":model",
        ":scikit",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "measure",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":measure.ml",
    deps = [
        ":benchmark",
        ":benchmark_helpers",
        ":csv",
        ":generator",
        ":registration",
        ":sparse_vec",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "model",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":model.ml",
    deps = [
        ":costlang",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "override",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":override.ml",
    deps = [
        ":csv",
        ":free_variable",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "pyinit",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":pyinit.ml",
    deps = [
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "registration",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":registration.ml",
    deps = [
        ":benchmark",
        ":model",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "scikit",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":scikit.ml",
    deps = [
        ":pyinit",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "sparse_vec",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    struct = ":sparse_vec.ml",
    deps = [
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_signature(
    name = "structure_samplers__sig",
    src = ":structure_samplers.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    deps = [
        ":base_samplers",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "structure_samplers",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "StaTz",
        "-open",
        "Tezos_stdlib_unix",
    ],
    sig = ":structure_samplers__sig",
    struct = ":structure_samplers.ml",
    deps = [
        ":base_samplers",
        "@ocaml//lib/benchmark-utils",
        "@data-encoding//:data-encoding",
        "@ocaml-migrate-parsetree//:ocaml-migrate-parsetree",
        "@ocaml//lib/pyml-plot",
        "@ocaml//lib/staTz",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_clic:Tezos_clic",
        "@tezos//src/lib_micheline:Tezos_micheline",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
    ],
)

# okapi:auto
# okapi:public_name tezos-benchmark
ocaml_ns_library(
    name = "Tezos_benchmark",
    submodules = [
        ":base_samplers",
        ":benchmark",
        ":benchmark_helpers",
        ":builtin_benchmarks",
        ":codegen",
        ":costlang",
        ":crypto_samplers",
        ":csv",
        ":fixed_point_transform",
        ":free_variable",
        ":generator",
        ":inference",
        ":measure",
        ":model",
        ":override",
        ":pyinit",
        ":registration",
        ":scikit",
        ":sparse_vec",
        ":structure_samplers",
    ],
    visibility = ["//visibility:public"],
)
