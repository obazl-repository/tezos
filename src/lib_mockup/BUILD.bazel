load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_module", "ocaml_ns_library", "ocaml_signature")

ocaml_signature(
    name = "registration_sig",
    src = ":registration.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
    ],
    deps = [
        ":registration_intf",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
    ],
)

ocaml_module(
    name = "registration",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
    ],
    sig = ":registration_sig",
    struct = ":registration.ml",
    deps = [
        ":registration_intf",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
    ],
)

ocaml_module(
    name = "registration_intf",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
    ],
    struct = ":registration_intf.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
    ],
)

ocaml_signature(
    name = "mockup_args_sig",
    src = ":mockup_args.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
    ],
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
    ],
)

ocaml_module(
    name = "mockup_args",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
    ],
    sig = ":mockup_args_sig",
    struct = ":mockup_args.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
    ],
)

ocaml_ns_library(
    name = "#Tezos_mockup_registration",
    submodules = [
        ":mockup_args",
        ":registration",
        ":registration_intf",
    ],
    visibility = ["//visibility:public"],
)

ocaml_signature(
    name = "files_sig",
    src = ":files.mli",
    deps_opam = [
        "tezos-base.unix",
        "resto-cohttp-self-serving-client",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_mockup_registration",
    ],
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_mockup_proxy:#Tezos_mockup_proxy",
        "@tezos//src/lib_p2p:#Tezos_p2p",
        "@tezos//src/lib_p2p_services:#Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "files",
    deps_opam = [
        "tezos-base.unix",
        "resto-cohttp-self-serving-client",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_mockup_registration",
    ],
    sig = ":files_sig",
    struct = ":files.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_mockup_proxy:#Tezos_mockup_proxy",
        "@tezos//src/lib_p2p:#Tezos_p2p",
        "@tezos//src/lib_p2p_services:#Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "local_services",
    deps_opam = [
        "tezos-base.unix",
        "resto-cohttp-self-serving-client",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_mockup_registration",
    ],
    struct = ":local_services.ml",
    deps = [
        ":files",
        ":persistence",
        ":registration",
        ":registration_intf",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_mockup_proxy:#Tezos_mockup_proxy",
        "@tezos//src/lib_p2p:#Tezos_p2p",
        "@tezos//src/lib_p2p_services:#Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_signature(
    name = "persistence_sig",
    src = ":persistence.mli",
    deps_opam = [
        "tezos-base.unix",
        "resto-cohttp-self-serving-client",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_mockup_registration",
    ],
    deps = [
        ":files",
        ":registration",
        ":registration_intf",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_mockup_proxy:#Tezos_mockup_proxy",
        "@tezos//src/lib_p2p:#Tezos_p2p",
        "@tezos//src/lib_p2p_services:#Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "persistence",
    deps_opam = [
        "tezos-base.unix",
        "resto-cohttp-self-serving-client",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_mockup_registration",
    ],
    sig = ":persistence_sig",
    struct = ":persistence.ml",
    deps = [
        ":files",
        ":registration",
        ":registration_intf",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_mockup_proxy:#Tezos_mockup_proxy",
        "@tezos//src/lib_p2p:#Tezos_p2p",
        "@tezos//src/lib_p2p_services:#Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "persistence_intf",
    deps_opam = [
        "tezos-base.unix",
        "resto-cohttp-self-serving-client",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_mockup_registration",
    ],
    struct = ":persistence_intf.ml",
    deps = [
        ":registration",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_mockup_proxy:#Tezos_mockup_proxy",
        "@tezos//src/lib_p2p:#Tezos_p2p",
        "@tezos//src/lib_p2p_services:#Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "RPC_client",
    deps_opam = [
        "tezos-base.unix",
        "resto-cohttp-self-serving-client",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_mockup_registration",
    ],
    struct = ":RPC_client.ml",
    deps = [
        ":local_services",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_mockup_proxy:#Tezos_mockup_proxy",
        "@tezos//src/lib_p2p:#Tezos_p2p",
        "@tezos//src/lib_p2p_services:#Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_signature(
    name = "migration_sig",
    src = ":migration.mli",
    deps_opam = [
        "tezos-base.unix",
        "resto-cohttp-self-serving-client",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_mockup_registration",
    ],
    deps = [
        ":persistence",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_mockup_proxy:#Tezos_mockup_proxy",
        "@tezos//src/lib_p2p:#Tezos_p2p",
        "@tezos//src/lib_p2p_services:#Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "migration",
    deps_opam = [
        "tezos-base.unix",
        "resto-cohttp-self-serving-client",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_mockup_registration",
    ],
    sig = ":migration_sig",
    struct = ":migration.ml",
    deps = [
        ":persistence",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_mockup_proxy:#Tezos_mockup_proxy",
        "@tezos//src/lib_p2p:#Tezos_p2p",
        "@tezos//src/lib_p2p_services:#Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_ns_library(
    name = "#Tezos_mockup",
    submodules = [
        ":RPC_client",
        ":files",
        ":local_services",
        ":migration",
        ":persistence",
        ":persistence_intf",
    ],
    visibility = ["//visibility:public"],
)

ocaml_signature(
    name = "mockup_wallet_sig",
    src = ":mockup_wallet.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_mockup",
        "-open",
        "Tezos_mockup_registration",
    ],
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
    ],
)

ocaml_module(
    name = "mockup_wallet",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_mockup",
        "-open",
        "Tezos_mockup_registration",
    ],
    sig = ":mockup_wallet_sig",
    struct = ":mockup_wallet.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
    ],
)

ocaml_signature(
    name = "mockup_commands_sig",
    src = ":mockup_commands.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_mockup",
        "-open",
        "Tezos_mockup_registration",
    ],
    deps = [
        ":migration",
        ":registration",
        ":registration_intf",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
    ],
)

ocaml_module(
    name = "mockup_commands",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_mockup",
        "-open",
        "Tezos_mockup_registration",
    ],
    sig = ":mockup_commands_sig",
    struct = ":mockup_commands.ml",
    deps = [
        ":migration",
        ":registration",
        ":registration_intf",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
    ],
)

ocaml_ns_library(
    name = "#Tezos_mockup_commands",
    submodules = [
        ":mockup_commands",
        ":mockup_wallet",
    ],
    visibility = ["//visibility:public"],
)
