load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_executable", "ocaml_module", "ocaml_ns_library", "ocaml_signature")

ocaml_module(
    name = "store_events",
    deps_opam = [
        "tezos-protocol-updater",
        "tezos-lmdb",
        "tezos-validation",
        "lwt-watcher",
    ],
    opts = [
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_protocol_updater",
    ],
    struct = ":store_events.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_context:#Tezos_context",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_signature(
    name = "legacy_chain_traversal_sig",
    src = ":legacy_chain_traversal.mli",
    deps_opam = [
        "tezos-protocol-updater",
        "tezos-lmdb",
        "tezos-validation",
        "lwt-watcher",
    ],
    opts = [
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_protocol_updater",
    ],
    deps = [
        ":legacy_state",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_context:#Tezos_context",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "legacy_chain_traversal",
    deps_opam = [
        "tezos-protocol-updater",
        "tezos-lmdb",
        "tezos-validation",
        "lwt-watcher",
    ],
    opts = [
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_protocol_updater",
    ],
    sig = ":legacy_chain_traversal_sig",
    struct = ":legacy_chain_traversal.ml",
    deps = [
        ":legacy_state",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_context:#Tezos_context",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_signature(
    name = "raw_store_sig",
    src = ":raw_store.mli",
    deps_opam = [
        "tezos-protocol-updater",
        "tezos-lmdb",
        "tezos-validation",
        "lwt-watcher",
    ],
    opts = [
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_protocol_updater",
    ],
    deps = [
        ":store_sigs",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_context:#Tezos_context",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "raw_store",
    deps_opam = [
        "tezos-protocol-updater",
        "tezos-lmdb",
        "tezos-validation",
        "lwt-watcher",
    ],
    opts = [
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_protocol_updater",
    ],
    sig = ":raw_store_sig",
    struct = ":raw_store.ml",
    deps = [
        ":store_sigs",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_context:#Tezos_context",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_signature(
    name = "legacy_snapshots_sig",
    src = ":legacy_snapshots.mli",
    deps_opam = [
        "tezos-protocol-updater",
        "tezos-lmdb",
        "tezos-validation",
        "lwt-watcher",
    ],
    opts = [
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_protocol_updater",
    ],
    deps = [
        ":legacy_state",
        ":legacy_store",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_context:#Tezos_context",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "legacy_snapshots",
    deps_opam = [
        "tezos-protocol-updater",
        "tezos-lmdb",
        "tezos-validation",
        "lwt-watcher",
    ],
    opts = [
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_protocol_updater",
    ],
    sig = ":legacy_snapshots_sig",
    struct = ":legacy_snapshots.ml",
    deps = [
        ":legacy_state",
        ":legacy_store",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_context:#Tezos_context",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_signature(
    name = "store_helpers_sig",
    src = ":store_helpers.mli",
    deps_opam = [
        "tezos-protocol-updater",
        "tezos-lmdb",
        "tezos-validation",
        "lwt-watcher",
    ],
    opts = [
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_protocol_updater",
    ],
    deps = [
        ":store_events",
        ":store_sigs",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_context:#Tezos_context",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "store_helpers",
    deps_opam = [
        "tezos-protocol-updater",
        "tezos-lmdb",
        "tezos-validation",
        "lwt-watcher",
    ],
    opts = [
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_protocol_updater",
    ],
    sig = ":store_helpers_sig",
    struct = ":store_helpers.ml",
    deps = [
        ":store_events",
        ":store_sigs",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_context:#Tezos_context",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_signature(
    name = "legacy_state_sig",
    src = ":legacy_state.mli",
    deps_opam = [
        "tezos-protocol-updater",
        "tezos-lmdb",
        "tezos-validation",
        "lwt-watcher",
    ],
    opts = [
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_protocol_updater",
    ],
    deps = [
        ":legacy_store",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_context:#Tezos_context",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "legacy_state",
    deps_opam = [
        "tezos-protocol-updater",
        "tezos-lmdb",
        "tezos-validation",
        "lwt-watcher",
    ],
    opts = [
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_protocol_updater",
    ],
    sig = ":legacy_state_sig",
    struct = ":legacy_state.ml",
    deps = [
        ":legacy_store",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_context:#Tezos_context",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_signature(
    name = "legacy_store_sig",
    src = ":legacy_store.mli",
    deps_opam = [
        "tezos-protocol-updater",
        "tezos-lmdb",
        "tezos-validation",
        "lwt-watcher",
    ],
    opts = [
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_protocol_updater",
    ],
    deps = [
        ":raw_store",
        ":store_helpers",
        ":store_sigs",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_context:#Tezos_context",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "legacy_store",
    deps_opam = [
        "tezos-protocol-updater",
        "tezos-lmdb",
        "tezos-validation",
        "lwt-watcher",
    ],
    opts = [
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_protocol_updater",
    ],
    sig = ":legacy_store_sig",
    struct = ":legacy_store.ml",
    deps = [
        ":raw_store",
        ":store_helpers",
        ":store_sigs",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_context:#Tezos_context",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "store_sigs",
    deps_opam = [
        "tezos-protocol-updater",
        "tezos-lmdb",
        "tezos-validation",
        "lwt-watcher",
    ],
    opts = [
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_protocol_updater",
    ],
    struct = ":store_sigs.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_context:#Tezos_context",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_signature(
    name = "legacy_chain_sig",
    src = ":legacy_chain.mli",
    deps_opam = [
        "tezos-protocol-updater",
        "tezos-lmdb",
        "tezos-validation",
        "lwt-watcher",
    ],
    opts = [
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_protocol_updater",
    ],
    deps = [
        ":legacy_chain_traversal",
        ":legacy_state",
        ":legacy_store",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_context:#Tezos_context",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "legacy_chain",
    deps_opam = [
        "tezos-protocol-updater",
        "tezos-lmdb",
        "tezos-validation",
        "lwt-watcher",
    ],
    opts = [
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_protocol_updater",
    ],
    sig = ":legacy_chain_sig",
    struct = ":legacy_chain.ml",
    deps = [
        ":legacy_chain_traversal",
        ":legacy_state",
        ":legacy_store",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_context:#Tezos_context",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

# okapi:auto
# okapi:public_name tezos-legacy-store
ocaml_ns_library(
    name = "#Tezos_legacy_store",
    submodules = [
        ":legacy_chain",
        ":legacy_chain_traversal",
        ":legacy_snapshots",
        ":legacy_state",
        ":legacy_store",
        ":raw_store",
        ":store_events",
        ":store_helpers",
        ":store_sigs",
    ],
    visibility = ["//visibility:public"],
)

ocaml_module(
    name = "legacy_store_builder",
    deps_opam = [
        "tezos-validation",
        "tezos-protocol-updater",
        "tezos-embedded-protocol-alpha",
        "tezos-embedded-protocol-genesis",
    ],
    opts = [
        "-open",
        "Tezos_legacy_store",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_protocol_updater",
    ],
    struct = ":legacy_store_builder.ml",
    deps = [
        ":legacy_chain",
        ":legacy_state",
        "@tezos//src/lib_store/legacy_store:#Tezos_legacy_store",
    ],
)

# okapi:public_name legacy_store_builder
ocaml_executable(
    name = "exe-legacy_store_builder",
    main = "legacy_store_builder",
    visibility = ["//visibility:public"],
)
