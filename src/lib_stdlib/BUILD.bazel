load("@bazel_skylib//rules:write_file.bzl", "write_file")
load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_signature",
    "ppx_executable",
    "ppx_module",
)
load("@obazl_rules_ocaml//dsl:library.bzl", "lib", "mod", "sig", "copy_interface", "ppx_exe", "ppx_args")

lib(
    name = "tezos-stdlib",
    deps_opam = [
        "hex",
        "lwt",
        "zarith",
    ],
    modules = dict(
        bits = sig(),
        bounded_heap = sig(),
        circular_buffer = sig(),
        compare = sig(),
        fallbackArray = sig(),
        lwt_dropbox = sig(),
        lwt_idle_waiter = sig(),
        lwt_pipe = sig(),
        lwt_utils = sig(),
        memory = sig(),
        tag = sig(),
        tzEndian = sig(),
        tzFilename = sig(),
        tzList = sig(":bounded_heap"),
        tzString = sig(),
        utils = sig(),
    ),
    ppx = ["ppx_inline_test"],
)
