load("@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_module",
    "ocaml_ns_archive",
    "ocaml_signature",
)

###############################################
########### Archive/Library Targets ###########

######## tezos-version ########
TEZOS_VERSION_OPTS = [
    "-open", "Tezos_base__TzPervasives",
]

TEZOS_VERSION_DEPS = [
    "//src/lib_base:tezos-base",
]

ocaml_ns_archive(
    name       = "tezos-version",
    ns         = "Tezos_version",
    visibility = ["//visibility:public"],
    submodules = [
        ":Bin_version",
        ":Current_git_info",
        ":Generated_git_info",
        ":Node_version",
        ":Version",
    ],
)

#############################
####  Singleton Targets  ####

ocaml_module(
    name     = "Bin_version",
    struct   = "bin_version.ml",
    sig      = ":Bin_version_cmi",
    opts     = TEZOS_VERSION_OPTS,
    deps     = TEZOS_VERSION_DEPS + [
       ":Version",
       ":Current_git_info",
    ]
)

ocaml_signature(
    name     = "Bin_version_cmi",
    src      = "bin_version.mli",
    opts     = TEZOS_VERSION_OPTS,
    deps     = TEZOS_VERSION_DEPS + [
    ]
)

ocaml_module(
    name     = "Current_git_info",
    struct   = "current_git_info.ml",
    sig      = ":Current_git_info_cmi",
    opts     = TEZOS_VERSION_OPTS,
    deps     = TEZOS_VERSION_DEPS + [
       ":Generated_git_info",
    ]
)

ocaml_signature(
    name     = "Current_git_info_cmi",
    src      = "current_git_info.mli",
    opts     = TEZOS_VERSION_OPTS,
    deps     = TEZOS_VERSION_DEPS + [
    ]
)

ocaml_module(
    name     = "Generated_git_info",
    struct   = "generated_git_info.ml",
    opts     = TEZOS_VERSION_OPTS,
    deps     = TEZOS_VERSION_DEPS + [
    ]
)

# ocaml_module(
#     name     = "Generated_git_info",
#     struct   = "generated_git_info.ml",
#     opts     = TEZOS_VERSION_OPTS,
#     deps     = TEZOS_VERSION_DEPS + [
#     ]
# )

ocaml_module(
    name     = "Node_version",
    struct   = "node_version.ml",
    sig      = ":Node_version_cmi",
    opts     = TEZOS_VERSION_OPTS,
    deps     = TEZOS_VERSION_DEPS + [
       ":Version",
    ]
)

ocaml_signature(
    name     = "Node_version_cmi",
    src      = "node_version.mli",
    opts     = TEZOS_VERSION_OPTS,
    deps     = TEZOS_VERSION_DEPS + [
       ":Version",
    ]
)

ocaml_module(
    name     = "Version",
    struct   = "version.ml",
    sig      = ":Version_cmi",
    opts     = TEZOS_VERSION_OPTS,
    deps     = TEZOS_VERSION_DEPS + [
    ]
)

ocaml_signature(
    name     = "Version_cmi",
    src      = "version.mli",
    opts     = TEZOS_VERSION_OPTS,
    deps     = TEZOS_VERSION_DEPS + [
    ]
)

########################
####  Rule Targets  ####

