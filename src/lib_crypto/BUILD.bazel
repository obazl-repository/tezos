load("@obazl_rules_ocaml//dsl:library.bzl", "lib", "mod", "sig")

lib(
    name = "crypto-common",
    ns = False,
    deps_opam = [
        "ringo",
        "bls12-381",
    ],
    modules = dict(
        base58 = sig(),
        blake2B = sig(":s", ":helpers"),
        helpers = mod(":base58"),
        s = mod(":base58"),
    ),
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
    ],
    deps = [
        "//src/lib_stdlib:#Tezos_stdlib",
        # "//src/lib_error_monad:lib-error-monad",
        "//src/lib_error_monad:#Tezos_error_monad",
        "//src/lib_lwt_result_stdlib:lib-tezos-lwt-result-stdlib",
        "//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "//src/lib_lwt_result_stdlib/bare/sigs:#Bare_sigs",
        "//src/lib_lwt_result_stdlib/traced/sigs:#Traced_sigs",
        "@json-data-encoding//src:lib-json-data-encoding",
        "//src/lib_hacl_glue:lib-tezos-hacl-glue",
        "//src/lib_hacl_glue:#Tezos_hacl_glue",
        "//src/lib_rpc:lib-tezos-rpc",
    ],
    ppx_deps = True,
)

lib(
    name = "crypto",
    deps_opam = [
        "ringo",
        "bls12-381",
        "secp256k1-internal",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_rpc",
    ],
    modules = dict(
        BLS12_381 = sig(),
        block_hash = sig(),
        block_metadata_hash = sig(),
        chain_id = sig(":block_hash"),
        context_hash = sig(),
        crypto_box = sig(),
        ed25519 = sig(),
        hacl = sig(),
        operation_hash = sig(),
        operation_list_hash = sig(":operation_hash"),
        operation_list_list_hash = sig(":operation_list_hash"),
        operation_metadata_hash = sig(":blake2B"),
        operation_metadata_list_hash = sig(":operation_metadata_hash"),
        operation_metadata_list_list_hash = sig(":operation_metadata_list_hash"),
        p256 = sig(),
        protocol_hash = sig(),
        pvss = sig(":znz"),
        pvss_secp256k1 = sig(":pvss", ":secp256k1_group"),
        rand = sig(),
        secp256k1 = sig(),
        secp256k1_group = sig(),
        signature = sig(":ed25519", ":secp256k1", ":p256", ":chain_id"),
        timelock = sig(":crypto_box"),
        znz = sig(":zplus"),
        zplus = sig(),
    ),
    deps = [
        ":lib-crypto-common",
        "//src/lib_stdlib:lib-tezos-stdlib",
        "//src/lib_error_monad:#Tezos_error_monad",
        "//src/lib_lwt_result_stdlib:lib-tezos-lwt-result-stdlib",
        "//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "//src/lib_lwt_result_stdlib/bare/sigs:#Bare_sigs",
        "//src/lib_lwt_result_stdlib/traced/sigs:#Traced_sigs",
        "@json-data-encoding//src:lib-json-data-encoding",
        "//src/lib_hacl_glue:lib-tezos-hacl-glue",
        "//src/lib_hacl_glue:#Tezos_hacl_glue",
        "//src/lib_rpc:#Tezos_rpc",
    ],
    ppx_deps = True,
)
