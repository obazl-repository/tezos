load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_module", "ocaml_ns_library", "ocaml_signature")

ocaml_signature(
    name = "pvss_sig",
    src = ":pvss.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":blake2B",
        ":s",
        ":znz",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "pvss",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":pvss_sig",
    struct = ":pvss.ml",
    deps = [
        ":blake2B",
        ":s",
        ":znz",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "BLS12_381_sig",
    src = ":BLS12_381.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "BLS12_381",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":BLS12_381_sig",
    struct = ":BLS12_381.ml",
    deps = [
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "chain_id_sig",
    src = ":chain_id.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":block_hash",
        ":helpers",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "chain_id",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":chain_id_sig",
    struct = ":chain_id.ml",
    deps = [
        ":base58",
        ":block_hash",
        ":helpers",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "s",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    struct = ":s.ml",
    deps = [
        ":base58",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "operation_list_list_hash_sig",
    src = ":operation_list_list_hash.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":blake2B",
        ":operation_list_hash",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "operation_list_list_hash",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":operation_list_list_hash_sig",
    struct = ":operation_list_list_hash.ml",
    deps = [
        ":base58",
        ":blake2B",
        ":operation_list_hash",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "pvss_secp256k1_sig",
    src = ":pvss_secp256k1.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":hacl",
        ":pvss",
        ":secp256k1_group",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "pvss_secp256k1",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":pvss_secp256k1_sig",
    struct = ":pvss_secp256k1.ml",
    deps = [
        ":hacl",
        ":pvss",
        ":secp256k1_group",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "operation_metadata_list_hash_sig",
    src = ":operation_metadata_list_hash.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":blake2B",
        ":operation_metadata_hash",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "operation_metadata_list_hash",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":operation_metadata_list_hash_sig",
    struct = ":operation_metadata_list_hash.ml",
    deps = [
        ":base58",
        ":blake2B",
        ":operation_metadata_hash",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "blake2B_sig",
    src = ":blake2B.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":hacl",
        ":helpers",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "blake2B",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":blake2B_sig",
    struct = ":blake2B.ml",
    deps = [
        ":base58",
        ":hacl",
        ":helpers",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "block_hash_sig",
    src = ":block_hash.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":blake2B",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "block_hash",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":block_hash_sig",
    struct = ":block_hash.ml",
    deps = [
        ":base58",
        ":blake2B",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "timelock_sig",
    src = ":timelock.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":blake2B",
        ":crypto_box",
        ":hacl",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "timelock",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":timelock_sig",
    struct = ":timelock.ml",
    deps = [
        ":blake2B",
        ":crypto_box",
        ":hacl",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "operation_list_hash_sig",
    src = ":operation_list_hash.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":blake2B",
        ":operation_hash",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "operation_list_hash",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":operation_list_hash_sig",
    struct = ":operation_list_hash.ml",
    deps = [
        ":base58",
        ":blake2B",
        ":operation_hash",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "signature_sig",
    src = ":signature.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":chain_id",
        ":ed25519",
        ":helpers",
        ":p256",
        ":s",
        ":secp256k1",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "signature",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":signature_sig",
    struct = ":signature.ml",
    deps = [
        ":base58",
        ":chain_id",
        ":ed25519",
        ":helpers",
        ":p256",
        ":s",
        ":secp256k1",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "rand_sig",
    src = ":rand.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":hacl",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "rand",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":rand_sig",
    struct = ":rand.ml",
    deps = [
        ":hacl",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "zplus_sig",
    src = ":zplus.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "zplus",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":zplus_sig",
    struct = ":zplus.ml",
    deps = [
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "base58_sig",
    src = ":base58.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":hacl",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "base58",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":base58_sig",
    struct = ":base58.ml",
    deps = [
        ":hacl",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "helpers",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    struct = ":helpers.ml",
    deps = [
        ":base58",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "operation_hash_sig",
    src = ":operation_hash.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":blake2B",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "operation_hash",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":operation_hash_sig",
    struct = ":operation_hash.ml",
    deps = [
        ":base58",
        ":blake2B",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "hacl_sig",
    src = ":hacl.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "hacl",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":hacl_sig",
    struct = ":hacl.ml",
    deps = [
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "context_hash_sig",
    src = ":context_hash.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":blake2B",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "context_hash",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":context_hash_sig",
    struct = ":context_hash.ml",
    deps = [
        ":base58",
        ":blake2B",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "p256_sig",
    src = ":p256.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":blake2B",
        ":hacl",
        ":helpers",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "p256",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":p256_sig",
    struct = ":p256.ml",
    deps = [
        ":base58",
        ":blake2B",
        ":hacl",
        ":helpers",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "znz_sig",
    src = ":znz.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":helpers",
        ":s",
        ":zplus",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "znz",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":znz_sig",
    struct = ":znz.ml",
    deps = [
        ":base58",
        ":helpers",
        ":s",
        ":zplus",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "crypto_box_sig",
    src = ":crypto_box.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":blake2B",
        ":hacl",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "crypto_box",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":crypto_box_sig",
    struct = ":crypto_box.ml",
    deps = [
        ":base58",
        ":blake2B",
        ":hacl",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "operation_metadata_hash_sig",
    src = ":operation_metadata_hash.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":blake2B",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "operation_metadata_hash",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":operation_metadata_hash_sig",
    struct = ":operation_metadata_hash.ml",
    deps = [
        ":base58",
        ":blake2B",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "protocol_hash_sig",
    src = ":protocol_hash.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":blake2B",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "protocol_hash",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":protocol_hash_sig",
    struct = ":protocol_hash.ml",
    deps = [
        ":base58",
        ":blake2B",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "block_metadata_hash_sig",
    src = ":block_metadata_hash.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":blake2B",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "block_metadata_hash",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":block_metadata_hash_sig",
    struct = ":block_metadata_hash.ml",
    deps = [
        ":base58",
        ":blake2B",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "operation_metadata_list_list_hash_sig",
    src = ":operation_metadata_list_list_hash.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":blake2B",
        ":operation_metadata_list_hash",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "operation_metadata_list_list_hash",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":operation_metadata_list_list_hash_sig",
    struct = ":operation_metadata_list_list_hash.ml",
    deps = [
        ":base58",
        ":blake2B",
        ":operation_metadata_list_hash",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "secp256k1_group_sig",
    src = ":secp256k1_group.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":helpers",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "secp256k1_group",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":secp256k1_group_sig",
    struct = ":secp256k1_group.ml",
    deps = [
        ":base58",
        ":helpers",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "secp256k1_sig",
    src = ":secp256k1.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":blake2B",
        ":hacl",
        ":helpers",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "secp256k1",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":secp256k1_sig",
    struct = ":secp256k1.ml",
    deps = [
        ":base58",
        ":blake2B",
        ":hacl",
        ":helpers",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "ed25519_sig",
    src = ":ed25519.mli",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    deps = [
        ":base58",
        ":blake2B",
        ":hacl",
        ":helpers",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "ed25519",
    deps_opam = [
        "data-encoding",
        "lwt",
        "bls12-381",
        "secp256k1-internal",
        "ringo",
        "zarith",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
    ],
    sig = ":ed25519_sig",
    struct = ":ed25519.ml",
    deps = [
        ":base58",
        ":blake2B",
        ":hacl",
        ":helpers",
        ":s",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_hacl_glue/virtual:#Tezos_hacl_glue",
        "@tezos//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

# okapi:auto
# okapi:public_name tezos-crypto
ocaml_ns_library(
    name = "#Tezos_crypto",
    submodules = [
        ":BLS12_381",
        ":base58",
        ":blake2B",
        ":block_hash",
        ":block_metadata_hash",
        ":chain_id",
        ":context_hash",
        ":crypto_box",
        ":ed25519",
        ":hacl",
        ":helpers",
        ":operation_hash",
        ":operation_list_hash",
        ":operation_list_list_hash",
        ":operation_metadata_hash",
        ":operation_metadata_list_hash",
        ":operation_metadata_list_list_hash",
        ":p256",
        ":protocol_hash",
        ":pvss",
        ":pvss_secp256k1",
        ":rand",
        ":s",
        ":secp256k1",
        ":secp256k1_group",
        ":signature",
        ":timelock",
        ":znz",
        ":zplus",
    ],
    visibility = ["//visibility:public"],
)
