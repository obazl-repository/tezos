load("@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_module",
    "ocaml_ns_archive",
    "ocaml_signature",
)

###############################################
########### Archive/Library Targets ###########

######## tezos-signer-services ########
TEZOS_SIGNER_SERVICES_OPTS = [
    "-linkall",
    "-open", "Tezos_base__TzPervasives",
    "-open", "Tezos_client_base",
    "-open", "Tezos_rpc",
]

TEZOS_SIGNER_SERVICES_DEPS = [
    "//src/lib_base:tezos-base",
    "//src/lib_client_base:tezos-client-base",
    "//src/lib_rpc:tezos-rpc",
]

ocaml_ns_archive(
    name       = "tezos-signer-services",
    ns         = "Tezos_signer_services",
    visibility = ["//visibility:public"],
    submodules = [
        ":Signer_messages",
        ":Signer_services",
    ],
)

#############################
####  Singleton Targets  ####

ocaml_module(
    name     = "Signer_messages",
    struct   = "signer_messages.ml",
    sig      = ":Signer_messages_cmi",
    opts     = TEZOS_SIGNER_SERVICES_OPTS,
    deps     = TEZOS_SIGNER_SERVICES_DEPS + [
    ]
)

ocaml_signature(
    name     = "Signer_messages_cmi",
    src      = "signer_messages.mli",
    opts     = TEZOS_SIGNER_SERVICES_OPTS,
    deps     = TEZOS_SIGNER_SERVICES_DEPS + [
    ]
)

ocaml_module(
    name     = "Signer_services",
    struct   = "signer_services.ml",
    sig      = ":Signer_services_cmi",
    opts     = TEZOS_SIGNER_SERVICES_OPTS,
    deps     = TEZOS_SIGNER_SERVICES_DEPS + [
    ]
)

ocaml_signature(
    name     = "Signer_services_cmi",
    src      = "signer_services.mli",
    opts     = TEZOS_SIGNER_SERVICES_OPTS,
    deps     = TEZOS_SIGNER_SERVICES_DEPS + [
    ]
)

