load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_module", "ocaml_ns_library", "ocaml_signature")

ocaml_module(
    name = "client_config",
    deps_opam = [
        "tezos-signer-backends.unix",
        "lwt-exit",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_rpc_http",
        "-open",
        "Tezos_rpc_http_client_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_commands",
        "-open",
        "Tezos_mockup_commands",
        "-linkall",
    ],
    struct = ":client_config.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_proxy:#Tezos_proxy",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client_unix",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_signature(
    name = "client_context_unix_sig",
    src = ":client_context_unix.mli",
    deps_opam = [
        "tezos-signer-backends.unix",
        "lwt-exit",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_rpc_http",
        "-open",
        "Tezos_rpc_http_client_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_commands",
        "-open",
        "Tezos_mockup_commands",
        "-linkall",
    ],
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_proxy:#Tezos_proxy",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client_unix",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "client_context_unix",
    deps_opam = [
        "tezos-signer-backends.unix",
        "lwt-exit",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_rpc_http",
        "-open",
        "Tezos_rpc_http_client_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_commands",
        "-open",
        "Tezos_mockup_commands",
        "-linkall",
    ],
    sig = ":client_context_unix_sig",
    struct = ":client_context_unix.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_proxy:#Tezos_proxy",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client_unix",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_signature(
    name = "client_main_run_sig",
    src = ":client_main_run.mli",
    deps_opam = [
        "tezos-signer-backends.unix",
        "lwt-exit",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_rpc_http",
        "-open",
        "Tezos_rpc_http_client_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_commands",
        "-open",
        "Tezos_mockup_commands",
        "-linkall",
    ],
    deps = [
        ":client_config",
        ":client_context_unix",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_proxy:#Tezos_proxy",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client_unix",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "client_main_run",
    deps_opam = [
        "tezos-signer-backends.unix",
        "lwt-exit",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_rpc_http",
        "-open",
        "Tezos_rpc_http_client_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_commands",
        "-open",
        "Tezos_mockup_commands",
        "-linkall",
    ],
    sig = ":client_main_run_sig",
    struct = ":client_main_run.ml",
    deps = [
        ":client_config",
        ":client_context_unix",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_proxy:#Tezos_proxy",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client_unix",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

# okapi:auto
ocaml_ns_library(
    name = "#Tezos_client_base_unix",
    submodules = [
        ":client_config",
        ":client_context_unix",
        ":client_main_run",
    ],
    visibility = ["//visibility:public"],
)
