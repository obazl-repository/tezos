load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_lex", "ocaml_module", "ocaml_ns_library", "ocaml_signature")

ocaml_lex(
    name = "point_parser_ml",
    src = ":point_parser.mll",
)

ocaml_module(
    name = "point_parser",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-w",
        "-39",
    ],
    struct = ":point_parser_ml",
    deps = [
        ":p2p_peer_id",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "test_chain_status_sig",
    src = ":test_chain_status.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        ":time",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "test_chain_status",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":test_chain_status_sig",
    struct = ":test_chain_status.ml",
    deps = [
        ":time",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "p2p_rejection_sig",
    src = ":p2p_rejection.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "p2p_rejection",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":p2p_rejection_sig",
    struct = ":p2p_rejection.ml",
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "data_encoding_wrapper_sig",
    src = ":data_encoding_wrapper.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "data_encoding_wrapper",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":data_encoding_wrapper_sig",
    struct = ":data_encoding_wrapper.ml",
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "p2p_stat_sig",
    src = ":p2p_stat.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "p2p_stat",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":p2p_stat_sig",
    struct = ":p2p_stat.ml",
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "mempool_sig",
    src = ":mempool.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "mempool",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":mempool_sig",
    struct = ":mempool.ml",
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "p2p_peer_id_sig",
    src = ":p2p_peer_id.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "p2p_peer_id",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":p2p_peer_id_sig",
    struct = ":p2p_peer_id.ml",
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "worker_types_sig",
    src = ":worker_types.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        ":time",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "worker_types",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":worker_types_sig",
    struct = ":worker_types.ml",
    deps = [
        ":time",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "time_sig",
    src = ":time.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "time",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":time_sig",
    struct = ":time.ml",
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "p2p_addr_sig",
    src = ":p2p_addr.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "p2p_addr",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":p2p_addr_sig",
    struct = ":p2p_addr.ml",
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "operation_sig",
    src = ":operation.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        ":s",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "operation",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":operation_sig",
    struct = ":operation.ml",
    deps = [
        ":s",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "user_activated_sig",
    src = ":user_activated.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "user_activated",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":user_activated_sig",
    struct = ":user_activated.ml",
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "protocol_sig",
    src = ":protocol.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        ":s",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "protocol",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":protocol_sig",
    struct = ":protocol.ml",
    deps = [
        ":s",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "p2p_version_sig",
    src = ":p2p_version.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "p2p_version",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":p2p_version_sig",
    struct = ":p2p_version.ml",
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "tzPervasives_sig",
    src = ":tzPervasives.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        ":block_header",
        ":block_locator",
        ":distributed_db_version",
        ":fitness",
        ":genesis",
        ":mempool",
        ":network_version",
        ":operation",
        ":p2p_addr",
        ":p2p_connection",
        ":p2p_identity",
        ":p2p_peer",
        ":p2p_point",
        ":p2p_rejection",
        ":p2p_stat",
        ":p2p_version",
        ":preapply_result",
        ":protocol",
        ":test_chain_status",
        ":time",
        ":user_activated",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "tzPervasives",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":tzPervasives_sig",
    struct = ":tzPervasives.ml",
    deps = [
        ":block_header",
        ":block_locator",
        ":distributed_db_version",
        ":fitness",
        ":genesis",
        ":mempool",
        ":network_version",
        ":operation",
        ":p2p_addr",
        ":p2p_connection",
        ":p2p_identity",
        ":p2p_peer",
        ":p2p_point",
        ":p2p_rejection",
        ":p2p_stat",
        ":p2p_version",
        ":preapply_result",
        ":protocol",
        ":test_chain_status",
        ":time",
        ":user_activated",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "block_header_sig",
    src = ":block_header.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        ":fitness",
        ":s",
        ":time",
        ":user_activated",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "block_header",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":block_header_sig",
    struct = ":block_header.ml",
    deps = [
        ":fitness",
        ":s",
        ":time",
        ":user_activated",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "p2p_connection_sig",
    src = ":p2p_connection.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        ":network_version",
        ":p2p_addr",
        ":p2p_peer_id",
        ":p2p_point",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "p2p_connection",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":p2p_connection_sig",
    struct = ":p2p_connection.ml",
    deps = [
        ":network_version",
        ":p2p_addr",
        ":p2p_peer_id",
        ":p2p_point",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "p2p_identity_sig",
    src = ":p2p_identity.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        ":p2p_peer",
        ":p2p_peer_id",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "p2p_identity",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":p2p_identity_sig",
    struct = ":p2p_identity.ml",
    deps = [
        ":p2p_peer",
        ":p2p_peer_id",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "network_version_sig",
    src = ":network_version.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        ":distributed_db_version",
        ":p2p_rejection",
        ":p2p_version",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "network_version",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":network_version_sig",
    struct = ":network_version.ml",
    deps = [
        ":distributed_db_version",
        ":p2p_rejection",
        ":p2p_version",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "p2p_peer_sig",
    src = ":p2p_peer.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        ":p2p_addr",
        ":p2p_connection",
        ":p2p_peer_id",
        ":p2p_stat",
        ":time",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "p2p_peer",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":p2p_peer_sig",
    struct = ":p2p_peer.ml",
    deps = [
        ":p2p_addr",
        ":p2p_connection",
        ":p2p_peer_id",
        ":p2p_stat",
        ":time",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "preapply_result_sig",
    src = ":preapply_result.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        ":operation",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "preapply_result",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":preapply_result_sig",
    struct = ":preapply_result.ml",
    deps = [
        ":operation",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "p2p_point_sig",
    src = ":p2p_point.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        ":p2p_addr",
        ":p2p_peer_id",
        ":point_parser",
        ":time",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "p2p_point",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":p2p_point_sig",
    struct = ":p2p_point.ml",
    deps = [
        ":p2p_addr",
        ":p2p_peer_id",
        ":point_parser",
        ":time",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "distributed_db_version_sig",
    src = ":distributed_db_version.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "distributed_db_version",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":distributed_db_version_sig",
    struct = ":distributed_db_version.ml",
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "worker_intf",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    struct = ":worker_intf.ml",
    deps = [
        ":time",
        ":worker_types",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "fitness_sig",
    src = ":fitness.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        ":s",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "fitness",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":fitness_sig",
    struct = ":fitness.ml",
    deps = [
        ":s",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "s",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    struct = ":s.ml",
    deps = [
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "block_locator_sig",
    src = ":block_locator.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        ":block_header",
        ":p2p_peer",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "block_locator",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":block_locator_sig",
    struct = ":block_locator.ml",
    deps = [
        ":block_header",
        ":p2p_peer",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "genesis_sig",
    src = ":genesis.mli",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    deps = [
        ":time",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

ocaml_module(
    name = "genesis",
    deps_opam = [
        "data-encoding",
        "ptime",
        "ezjsonm",
        "lwt",
        "ipaddr",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_clic",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_event_logging",
    ],
    sig = ":genesis_sig",
    struct = ":genesis.ml",
    deps = [
        ":time",
        "@tezos//src/lib_clic:#Tezos_clic",
        "@tezos//src/lib_crypto:#Tezos_crypto",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
        "@tezos//src/lib_event_logging:#Tezos_event_logging",
        "@tezos//src/lib_micheline:#Tezos_micheline",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_stdlib:#Tezos_stdlib",
    ],
)

# okapi:auto
# okapi:public_name tezos-base
ocaml_ns_library(
    name = "#Tezos_base",
    submodules = [
        ":block_header",
        ":block_locator",
        ":data_encoding_wrapper",
        ":distributed_db_version",
        ":fitness",
        ":genesis",
        ":mempool",
        ":network_version",
        ":operation",
        ":p2p_addr",
        ":p2p_connection",
        ":p2p_identity",
        ":p2p_peer",
        ":p2p_peer_id",
        ":p2p_point",
        ":p2p_rejection",
        ":p2p_stat",
        ":p2p_version",
        ":preapply_result",
        ":protocol",
        ":s",
        ":test_chain_status",
        ":time",
        ":tzPervasives",
        ":user_activated",
        ":worker_intf",
        ":worker_types",
    ],
    visibility = ["//visibility:public"],
)
