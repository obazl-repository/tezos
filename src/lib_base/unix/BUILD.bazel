load("@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_module",
    "ocaml_ns_archive",
    "ocaml_signature",
)

###############################################
########### Archive/Library Targets ###########

######## tezos-base.unix ########
TEZOS_BASE_UNIX_OPTS = [
    "-open", "Data_encoding",
    "-open", "Tezos_base",
    "-open", "Tezos_crypto",
    "-open", "Tezos_error_monad",
    "-open", "Tezos_stdlib",
    "-open", "Tezos_stdlib_unix",
]

TEZOS_BASE_UNIX_DEPS = [
    "//src/lib_base:tezos-base",
    "//src/lib_crypto:tezos-crypto",
    "//src/lib_error_monad:tezos-error-monad",
    "//src/lib_hacl_glue:tezos-hacl-glue",
    "//src/lib_stdlib:tezos-stdlib",
    "//src/lib_stdlib_unix:tezos-stdlib-unix",
    "@bls12-381-unix//:bls12-381-unix",
    "@data-encoding//:data-encoding",
]

ocaml_ns_archive(
    name       = "tezos-base.unix",
    ns         = "Tezos_base_unix",
    visibility = ["//visibility:public"],
    submodules = [
        ":Protocol_files",
        ":Socket",
    ],
)

#############################
####  Singleton Targets  ####

ocaml_module(
    name     = "Protocol_files",
    struct   = "protocol_files.ml",
    sig      = ":Protocol_files_cmi",
    opts     = TEZOS_BASE_UNIX_OPTS,
    deps     = TEZOS_BASE_UNIX_DEPS + [
    ]
)

ocaml_signature(
    name     = "Protocol_files_cmi",
    src      = "protocol_files.mli",
    opts     = TEZOS_BASE_UNIX_OPTS,
    deps     = TEZOS_BASE_UNIX_DEPS + [
    ]
)

ocaml_module(
    name     = "Socket",
    struct   = "socket.ml",
    sig      = ":Socket_cmi",
    opts     = TEZOS_BASE_UNIX_OPTS,
    deps     = TEZOS_BASE_UNIX_DEPS + [
    ]
)

ocaml_signature(
    name     = "Socket_cmi",
    src      = "socket.mli",
    opts     = TEZOS_BASE_UNIX_OPTS,
    deps     = TEZOS_BASE_UNIX_DEPS + [
    ]
)

