load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_module", "ocaml_ns_library", "ocaml_signature")

ocaml_signature(
    name = "animation__sig",
    src = ":animation.mli",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    deps = [
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_module(
    name = "animation",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    sig = ":animation__sig",
    struct = ":animation.ml",
    deps = [
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "file_descriptor_sink__sig",
    src = ":file_descriptor_sink.mli",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    deps = [
        ":lwt_utils_unix",
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_module(
    name = "file_descriptor_sink",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    sig = ":file_descriptor_sink__sig",
    struct = ":file_descriptor_sink.ml",
    deps = [
        ":lwt_utils_unix",
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "file_event_sink__sig",
    src = ":file_event_sink.mli",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    deps = [
        ":lwt_utils_unix",
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_module(
    name = "file_event_sink",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    sig = ":file_event_sink__sig",
    struct = ":file_event_sink.ml",
    deps = [
        ":lwt_utils_unix",
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "internal_event_unix__sig",
    src = ":internal_event_unix.mli",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    deps = [
        ":file_descriptor_sink",
        ":file_event_sink",
        ":lwt_log_sink_unix",
        ":lwt_utils_unix",
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_module(
    name = "internal_event_unix",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    sig = ":internal_event_unix__sig",
    struct = ":internal_event_unix.ml",
    deps = [
        ":file_descriptor_sink",
        ":file_event_sink",
        ":lwt_log_sink_unix",
        ":lwt_utils_unix",
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "lwt_lock_file__sig",
    src = ":lwt_lock_file.mli",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    deps = [
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_module(
    name = "lwt_lock_file",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    sig = ":lwt_lock_file__sig",
    struct = ":lwt_lock_file.ml",
    deps = [
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "lwt_log_sink_unix__sig",
    src = ":lwt_log_sink_unix.mli",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    deps = [
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_module(
    name = "lwt_log_sink_unix",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    sig = ":lwt_log_sink_unix__sig",
    struct = ":lwt_log_sink_unix.ml",
    deps = [
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "lwt_utils_unix__sig",
    src = ":lwt_utils_unix.mli",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    deps = [
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_module(
    name = "lwt_utils_unix",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    sig = ":lwt_utils_unix__sig",
    struct = ":lwt_utils_unix.ml",
    deps = [
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "moving_average__sig",
    src = ":moving_average.mli",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    deps = [
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_module(
    name = "moving_average",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    sig = ":moving_average__sig",
    struct = ":moving_average.ml",
    deps = [
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "sys_info__sig",
    src = ":sys_info.mli",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    deps = [
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_module(
    name = "sys_info",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    sig = ":sys_info__sig",
    struct = ":sys_info.ml",
    deps = [
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "systime_os__sig",
    src = ":systime_os.mli",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    deps = [
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_module(
    name = "systime_os",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    sig = ":systime_os__sig",
    struct = ":systime_os.ml",
    deps = [
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "utils__sig",
    src = ":utils.mli",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    deps = [
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_module(
    name = "utils",
    opts = [
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        "-open",
        "Tezos_event_logging",
        "-open",
        "Tezos_stdlib",
        "-open",
        "Data_encoding",
    ],
    sig = ":utils__sig",
    struct = ":utils.ml",
    deps = [
        "@data-encoding//:data-encoding",
        "@ipaddr//unix",
        "@lwt//unix",
        "@lwt_log//:lwt_log",
        "@mtime//:mtime",
        "@mtime//clock/os",
        "@ptime//:ptime",
        "@ptime//clock/os",
        "@re//:re",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_event_logging:Tezos_event_logging",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

# okapi:auto
# okapi:public_name tezos-stdlib-unix
ocaml_ns_library(
    name = "Tezos_stdlib_unix",
    submodules = [
        ":animation",
        ":file_descriptor_sink",
        ":file_event_sink",
        ":internal_event_unix",
        ":lwt_lock_file",
        ":lwt_log_sink_unix",
        ":lwt_utils_unix",
        ":moving_average",
        ":sys_info",
        ":systime_os",
        ":utils",
    ],
    visibility = ["//visibility:public"],
)
