load("@obazl_rules_ocaml//dsl:library.bzl", "lib", "mod", "sig")
load("//src/lib_protocol_environment/s_packer:pack.bzl", "pack")
load("//src/lib_protocol_environment/structs:srcs.bzl", "v0_srcs", "v1_srcs", "v2_srcs", "v3_srcs")

pack("structs", 0, v0_srcs)

pack("structs", 1, v1_srcs)

pack("structs", 2, v2_srcs)

pack("structs", 3, v3_srcs)

ocaml_module(
    name = "v0",
    struct = ":v0.ml",
    deps_opam = ["data-encoding"],
    deps = [
        "//src/lib_stdlib:#Tezos_stdlib",
        "//src/lib_crypto:#Tezos_crypto",
        "//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
    ],
)

ocaml_module(
    name = "v1",
    struct = ":v1.ml",
    deps_opam = ["data-encoding"],
    deps = [
        "//src/lib_stdlib:#Tezos_stdlib",
        "//src/lib_crypto:#Tezos_crypto",
        "//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
    ],
)

ocaml_module(
    name = "v2",
    struct = ":v2.ml",
    deps_opam = ["data-encoding"],
    deps = [
        "//src/lib_stdlib:#Tezos_stdlib",
        "//src/lib_crypto:#Tezos_crypto",
        "//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
    ],
)

ocaml_module(
    name = "v3",
    struct = ":v3.ml",
    deps_opam = ["data-encoding"],
    deps = [
        "//src/lib_stdlib:#Tezos_stdlib",
        "//src/lib_crypto:#Tezos_crypto",
        "//src/lib_lwt_result_stdlib:#Tezos_lwt_result_stdlib",
    ],
)

# okapi:public_name tezos-protocol-environment-structs
ocaml_ns_library(
    name = "#Tezos_protocol_environment_structs",
    submodules = [
        ":v0",
        ":v1",
        ":v2",
        ":v3",
    ],
    visibility = ["//visibility:public"],
)
