load("@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_module",
    "ocaml_ns_archive",
    "ocaml_signature",
)

###############################################
########### Archive/Library Targets ###########

######## tezos-protocol-environment ########
TEZOS_PROTOCOL_ENVIRONMENT_OPTS = [
    "-open", "Tezos_base__TzPervasives",
    "-open", "Tezos_micheline",
]

TEZOS_PROTOCOL_ENVIRONMENT_DEPS = [
    "//src/lib_base:tezos-base",
    "//src/lib_context/memory:tezos-context.memory",
    "//src/lib_micheline:tezos-micheline",
    "//src/lib_protocol_environment/sigs:tezos-protocol-environment-sigs",
    "//src/lib_protocol_environment/structs:tezos-protocol-environment-structs",
    "//src/lib_sapling:tezos-sapling",
    "@lwt-dllist//:lwt-dllist",
]

##############
ocaml_archive(
    name    = "tezos-protocol-environment",
    visibility = ["//visibility:public"],
    modules = [
        ":Dummy_context",
        ":Environment_V0",
        ":Environment_V1",
        ":Environment_V2",
        ":Environment_V3",
        ":Environment_context",
        ":Environment_context_intf",
        ":Environment_protocol_T",
        ":Environment_protocol_T_V0",
        ":Environment_protocol_T_V1",
        ":Environment_protocol_T_V2",
        ":Environment_protocol_T_V3",
        ":Memory_context",
        ":Proxy_context",
        ":Tezos_protocol_environment",
    ],
)

######## tezos-shell-context ########
TEZOS_SHELL_CONTEXT_DEPS = [
    "//src/lib_base:tezos-base",
    "//src/lib_context:tezos-context",
    "//src/lib_protocol_environment:tezos-protocol-environment",
]

ocaml_ns_archive(
    name       = "tezos-shell-context",
    ns         = "Tezos_shell_context",
    visibility = ["//visibility:public"],
    submodules = [
        ":Shell_context",
    ],
)

#############################
####  Singleton Targets  ####

ocaml_module(
    name     = "Dummy_context",
    struct   = "dummy_context.ml",
    sig      = ":Dummy_context_cmi",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Tezos_protocol_environment",
       ":Environment_context",
    ]
)

ocaml_signature(
    name     = "Dummy_context_cmi",
    src      = "dummy_context.mli",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Tezos_protocol_environment",
    ]
)

ocaml_module(
    name     = "Environment_V0",
    struct   = "environment_V0.ml",
    sig      = ":Environment_V0_cmi",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Environment_protocol_T_V0",
       ":Environment_protocol_T",
       ":Environment_context",
    ]
)

ocaml_signature(
    name     = "Environment_V0_cmi",
    src      = "environment_V0.mli",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Environment_protocol_T",
       ":Environment_context",
    ]
)

ocaml_module(
    name     = "Environment_V1",
    struct   = "environment_V1.ml",
    sig      = ":Environment_V1_cmi",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Environment_protocol_T_V1",
       ":Environment_protocol_T",
       ":Environment_context",
    ]
)

ocaml_signature(
    name     = "Environment_V1_cmi",
    src      = "environment_V1.mli",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Environment_protocol_T",
       ":Environment_context",
    ]
)

ocaml_module(
    name     = "Environment_V2",
    struct   = "environment_V2.ml",
    sig      = ":Environment_V2_cmi",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Environment_protocol_T_V2",
       ":Environment_protocol_T",
       ":Environment_context",
    ]
)

ocaml_signature(
    name     = "Environment_V2_cmi",
    src      = "environment_V2.mli",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Environment_protocol_T",
       ":Environment_context",
    ]
)

ocaml_module(
    name     = "Environment_V3",
    struct   = "environment_V3.ml",
    sig      = ":Environment_V3_cmi",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Environment_protocol_T_V3",
       ":Environment_protocol_T",
       ":Environment_context",
    ]
)

ocaml_signature(
    name     = "Environment_V3_cmi",
    src      = "environment_V3.mli",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Environment_protocol_T",
       ":Environment_context",
    ]
)

ocaml_module(
    name     = "Environment_context",
    struct   = "environment_context.ml",
    sig      = ":Environment_context_cmi",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Environment_context_intf",
    ]
)

ocaml_signature(
    name     = "Environment_context_cmi",
    src      = "environment_context.mli",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Environment_context_intf",
    ]
)

ocaml_module(
    name     = "Environment_context_intf",
    struct   = "environment_context_intf.ml",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
    ]
)

ocaml_module(
    name     = "Environment_protocol_T",
    struct   = "environment_protocol_T.ml",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Environment_protocol_T_V0",
       ":Environment_context",
    ]
)

ocaml_module(
    name     = "Environment_protocol_T_V0",
    struct   = "environment_protocol_T_V0.ml",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
    ]
)

ocaml_module(
    name     = "Environment_protocol_T_V1",
    struct   = "environment_protocol_T_V1.ml",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Environment_protocol_T_V0",
    ]
)

ocaml_module(
    name     = "Environment_protocol_T_V2",
    struct   = "environment_protocol_T_V2.ml",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Environment_protocol_T_V1",
    ]
)

ocaml_module(
    name     = "Environment_protocol_T_V3",
    struct   = "environment_protocol_T_V3.ml",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Environment_protocol_T_V2",
    ]
)

ocaml_module(
    name     = "Memory_context",
    struct   = "memory_context.ml",
    sig      = ":Memory_context_cmi",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Tezos_protocol_environment",
       ":Environment_context",
    ]
)

ocaml_signature(
    name     = "Memory_context_cmi",
    src      = "memory_context.mli",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Tezos_protocol_environment",
    ]
)

ocaml_module(
    name     = "Proxy_context",
    struct   = "proxy_context.ml",
    sig      = ":Proxy_context_cmi",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Tezos_protocol_environment",
       ":Environment_context",
    ]
)

ocaml_signature(
    name     = "Proxy_context_cmi",
    src      = "proxy_context.mli",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Tezos_protocol_environment",
    ]
)

ocaml_module(
    name     = "Shell_context",
    struct   = "shell_context.ml",
    sig      = ":Shell_context_cmi",
    deps     = TEZOS_SHELL_CONTEXT_DEPS + [
    ]
)

ocaml_signature(
    name     = "Shell_context_cmi",
    src      = "shell_context.mli",
    deps     = TEZOS_SHELL_CONTEXT_DEPS + [
    ]
)

ocaml_module(
    name     = "Tezos_protocol_environment",
    struct   = "tezos_protocol_environment.ml",
    sig      = ":Tezos_protocol_environment_cmi",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Environment_protocol_T",
       ":Environment_context",
       ":Environment_V2",
       ":Environment_V1",
       ":Environment_V0",
    ]
)

ocaml_signature(
    name     = "Tezos_protocol_environment_cmi",
    src      = "tezos_protocol_environment.mli",
    opts     = TEZOS_PROTOCOL_ENVIRONMENT_OPTS,
    deps     = TEZOS_PROTOCOL_ENVIRONMENT_DEPS + [
       ":Environment_protocol_T",
       ":Environment_context",
       ":Environment_V2",
       ":Environment_V1",
       ":Environment_V0",
    ]
)

