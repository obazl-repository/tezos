load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_module", "ocaml_ns_library", "ocaml_signature")

ocaml_signature(
    name = "block_directory__sig",
    src = ":block_directory.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        ":prevalidation",
        ":prevalidator_filters",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "block_directory",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":block_directory__sig",
    struct = ":block_directory.ml",
    deps = [
        ":prevalidation",
        ":prevalidator_filters",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "block_validator__sig",
    src = ":block_validator.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        ":block_validator_process",
        ":distributed_db",
        ":protocol_validator",
        ":worker_logger",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "block_validator",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":block_validator__sig",
    struct = ":block_validator.ml",
    deps = [
        ":block_validator_process",
        ":distributed_db",
        ":protocol_validator",
        ":worker_logger",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "block_validator_process__sig",
    src = ":block_validator_process.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "block_validator_process",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":block_validator_process__sig",
    struct = ":block_validator_process.ml",
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "bootstrap_pipeline__sig",
    src = ":bootstrap_pipeline.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        ":block_validator",
        ":bootstrap_pipeline_event",
        ":clock_drift",
        ":distributed_db",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "bootstrap_pipeline",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":bootstrap_pipeline__sig",
    struct = ":bootstrap_pipeline.ml",
    deps = [
        ":block_validator",
        ":bootstrap_pipeline_event",
        ":clock_drift",
        ":distributed_db",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "bootstrap_pipeline_event",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    struct = ":bootstrap_pipeline_event.ml",
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "chain_directory__sig",
    src = ":chain_directory.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        ":block_directory",
        ":chain_validator",
        ":distributed_db",
        ":prevalidator",
        ":validator",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "chain_directory",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":chain_directory__sig",
    struct = ":chain_directory.ml",
    deps = [
        ":block_directory",
        ":chain_validator",
        ":distributed_db",
        ":prevalidator",
        ":validator",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "chain_validator__sig",
    src = ":chain_validator.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        ":block_validator",
        ":block_validator_process",
        ":chain_validator_event",
        ":distributed_db",
        ":peer_validator",
        ":prevalidator",
        ":prevalidator_filters",
        ":synchronisation_heuristic",
        ":worker_logger",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "chain_validator",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":chain_validator__sig",
    struct = ":chain_validator.ml",
    deps = [
        ":block_validator",
        ":block_validator_process",
        ":chain_validator_event",
        ":distributed_db",
        ":peer_validator",
        ":prevalidator",
        ":prevalidator_filters",
        ":synchronisation_heuristic",
        ":worker_logger",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "chain_validator_event",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    struct = ":chain_validator_event.ml",
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "clock_drift__sig",
    src = ":clock_drift.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "clock_drift",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":clock_drift__sig",
    struct = ":clock_drift.ml",
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "config_directory__sig",
    src = ":config_directory.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "config_directory",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":config_directory__sig",
    struct = ":config_directory.ml",
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "consensus_heuristic__sig",
    src = ":consensus_heuristic.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "consensus_heuristic",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":consensus_heuristic__sig",
    struct = ":consensus_heuristic.ml",
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "distributed_db__sig",
    src = ":distributed_db.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        ":distributed_db_message",
        ":distributed_db_requester",
        ":p2p_reader",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "distributed_db",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":distributed_db__sig",
    struct = ":distributed_db.ml",
    deps = [
        ":distributed_db_message",
        ":distributed_db_requester",
        ":p2p_reader",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "distributed_db_event",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    struct = ":distributed_db_event.ml",
    deps = [
        ":distributed_db_message",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "distributed_db_message__sig",
    src = ":distributed_db_message.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "distributed_db_message",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":distributed_db_message__sig",
    struct = ":distributed_db_message.ml",
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "distributed_db_requester__sig",
    src = ":distributed_db_requester.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        ":distributed_db_event",
        ":distributed_db_message",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "distributed_db_requester",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":distributed_db_requester__sig",
    struct = ":distributed_db_requester.ml",
    deps = [
        ":distributed_db_event",
        ":distributed_db_message",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "injection_directory__sig",
    src = ":injection_directory.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        ":chain_directory",
        ":distributed_db",
        ":validator",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "injection_directory",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":injection_directory__sig",
    struct = ":injection_directory.ml",
    deps = [
        ":chain_directory",
        ":distributed_db",
        ":validator",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "monitor_directory__sig",
    src = ":monitor_directory.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        ":chain_directory",
        ":chain_validator",
        ":distributed_db",
        ":validator",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "monitor_directory",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":monitor_directory__sig",
    struct = ":monitor_directory.ml",
    deps = [
        ":chain_directory",
        ":chain_validator",
        ":distributed_db",
        ":validator",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "node__sig",
    src = ":node.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        ":block_validator",
        ":block_validator_process",
        ":chain_directory",
        ":chain_validator",
        ":config_directory",
        ":distributed_db",
        ":distributed_db_message",
        ":injection_directory",
        ":monitor_directory",
        ":node_event",
        ":peer_validator",
        ":prevalidator",
        ":protocol_directory",
        ":stat_directory",
        ":validator",
        ":version_directory",
        ":worker_directory",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "node",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":node__sig",
    struct = ":node.ml",
    deps = [
        ":block_validator",
        ":block_validator_process",
        ":chain_directory",
        ":chain_validator",
        ":config_directory",
        ":distributed_db",
        ":distributed_db_message",
        ":injection_directory",
        ":monitor_directory",
        ":node_event",
        ":peer_validator",
        ":prevalidator",
        ":protocol_directory",
        ":stat_directory",
        ":validator",
        ":version_directory",
        ":worker_directory",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "node_event",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    struct = ":node_event.ml",
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "p2p_reader__sig",
    src = ":p2p_reader.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        ":clock_drift",
        ":distributed_db_event",
        ":distributed_db_message",
        ":distributed_db_requester",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "p2p_reader",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":p2p_reader__sig",
    struct = ":p2p_reader.ml",
    deps = [
        ":clock_drift",
        ":distributed_db_event",
        ":distributed_db_message",
        ":distributed_db_requester",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "patch_context__sig",
    src = ":patch_context.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "patch_context",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":patch_context__sig",
    struct = ":patch_context.ml",
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "peer_validator__sig",
    src = ":peer_validator.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        ":block_validator",
        ":bootstrap_pipeline",
        ":distributed_db",
        ":worker_logger",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "peer_validator",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":peer_validator__sig",
    struct = ":peer_validator.ml",
    deps = [
        ":block_validator",
        ":bootstrap_pipeline",
        ":distributed_db",
        ":worker_logger",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "prevalidation__sig",
    src = ":prevalidation.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "prevalidation",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":prevalidation__sig",
    struct = ":prevalidation.ml",
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "prevalidator__sig",
    src = ":prevalidator.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        ":distributed_db",
        ":prevalidation",
        ":prevalidator_filters",
        ":worker_logger",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "prevalidator",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":prevalidator__sig",
    struct = ":prevalidator.ml",
    deps = [
        ":distributed_db",
        ":prevalidation",
        ":prevalidator_filters",
        ":worker_logger",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "prevalidator_filters__sig",
    src = ":prevalidator_filters.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "prevalidator_filters",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":prevalidator_filters__sig",
    struct = ":prevalidator_filters.ml",
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "protocol_directory__sig",
    src = ":protocol_directory.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        ":block_validator",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "protocol_directory",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":protocol_directory__sig",
    struct = ":protocol_directory.ml",
    deps = [
        ":block_validator",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "protocol_validator__sig",
    src = ":protocol_validator.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        ":distributed_db",
        ":protocol_validator_event",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "protocol_validator",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":protocol_validator__sig",
    struct = ":protocol_validator.ml",
    deps = [
        ":distributed_db",
        ":protocol_validator_event",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "protocol_validator_event",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    struct = ":protocol_validator_event.ml",
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "stat_directory",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    struct = ":stat_directory.ml",
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "synchronisation_heuristic__sig",
    src = ":synchronisation_heuristic.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "synchronisation_heuristic",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":synchronisation_heuristic__sig",
    struct = ":synchronisation_heuristic.ml",
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "validator__sig",
    src = ":validator.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        ":block_validator",
        ":block_validator_process",
        ":chain_validator",
        ":clock_drift",
        ":distributed_db",
        ":peer_validator",
        ":prevalidator",
        ":validator_event",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "validator",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":validator__sig",
    struct = ":validator.ml",
    deps = [
        ":block_validator",
        ":block_validator_process",
        ":chain_validator",
        ":clock_drift",
        ":distributed_db",
        ":peer_validator",
        ":prevalidator",
        ":validator_event",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "validator_event",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    struct = ":validator_event.ml",
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "version_directory",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    struct = ":version_directory.ml",
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "worker_directory__sig",
    src = ":worker_directory.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        ":block_validator",
        ":chain_directory",
        ":chain_validator",
        ":peer_validator",
        ":prevalidator",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "worker_directory",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":worker_directory__sig",
    struct = ":worker_directory.ml",
    deps = [
        ":block_validator",
        ":chain_directory",
        ":chain_validator",
        ":peer_validator",
        ":prevalidator",
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_signature(
    name = "worker_logger__sig",
    src = ":worker_logger.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

ocaml_module(
    name = "worker_logger",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_p2p_services",
        "-open",
        "Tezos_protocol_updater",
        "-open",
        "Tezos_requester",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_validation",
        "-open",
        "Tezos_version",
    ],
    sig = ":worker_logger__sig",
    struct = ":worker_logger.ml",
    deps = [
        "@ocaml//lib/lwt-canceler",
        "@ocaml//lib/lwt-exit",
        "@ocaml//lib/lwt-watcher",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_context:Tezos_context",
        "@tezos//src/lib_p2p:Tezos_p2p",
        "@tezos//src/lib_p2p_services:Tezos_p2p_services",
        "@tezos//src/lib_protocol_environment:Tezos_shell_context",
        "@tezos//src/lib_protocol_updater:Tezos_protocol_updater",
        "@tezos//src/lib_requester:Tezos_requester",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:Tezos_stdlib_unix",
        "@tezos//src/lib_store:Tezos_store",
        "@tezos//src/lib_validation:Tezos_validation",
        "@tezos//src/lib_version:Tezos_version",
        "@tezos//src/lib_workers:Tezos_workers",
    ],
)

# okapi:auto
# okapi:public_name tezos-shell
ocaml_ns_library(
    name = "Tezos_shell",
    submodules = [
        ":block_directory",
        ":block_validator",
        ":block_validator_process",
        ":bootstrap_pipeline",
        ":bootstrap_pipeline_event",
        ":chain_directory",
        ":chain_validator",
        ":chain_validator_event",
        ":clock_drift",
        ":config_directory",
        ":consensus_heuristic",
        ":distributed_db",
        ":distributed_db_event",
        ":distributed_db_message",
        ":distributed_db_requester",
        ":injection_directory",
        ":monitor_directory",
        ":node",
        ":node_event",
        ":p2p_reader",
        ":patch_context",
        ":peer_validator",
        ":prevalidation",
        ":prevalidator",
        ":prevalidator_filters",
        ":protocol_directory",
        ":protocol_validator",
        ":protocol_validator_event",
        ":stat_directory",
        ":synchronisation_heuristic",
        ":validator",
        ":validator_event",
        ":version_directory",
        ":worker_directory",
        ":worker_logger",
    ],
    visibility = ["//visibility:public"],
)
