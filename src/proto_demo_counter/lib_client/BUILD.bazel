load("@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_module",
    "ocaml_ns_archive",
    "ocaml_signature",
)

###############################################
########### Archive/Library Targets ###########

######## tezos-client-demo-counter ########
TEZOS_CLIENT_DEMO_COUNTER_OPTS = [
    "-w",
    "-9+27-30-32-40@8",
    "-safe-string",
    "-open", "Tezos_base__TzPervasives",
    "-open", "Tezos_client_base",
    "-open", "Tezos_client_commands",
    "-open", "Tezos_protocol_demo_counter",
    "-open", "Tezos_shell_services",
]

TEZOS_CLIENT_DEMO_COUNTER_DEPS = [
    "//src/lib_base:tezos-base",
    "//src/lib_client_base:tezos-client-base",
    "//src/lib_client_commands:tezos-client-commands",
    "//src/lib_shell_services:tezos-shell-services",
    "//src/proto_demo_counter/lib_protocol:tezos-protocol-demo-counter",
]

ocaml_ns_archive(
    name       = "tezos-client-demo-counter",
    ns         = "Tezos_client_demo_counter",
    visibility = ["//visibility:public"],
    submodules = [
        ":Client_proto_args",
        ":Client_proto_commands",
        ":Client_proto_main",
        ":Protocol_client_context",
    ],
)

#############################
####  Singleton Targets  ####

ocaml_module(
    name     = "Client_proto_args",
    struct   = "client_proto_args.ml",
    sig      = ":Client_proto_args_cmi",
    opts     = TEZOS_CLIENT_DEMO_COUNTER_OPTS,
    deps     = TEZOS_CLIENT_DEMO_COUNTER_DEPS + [
    ]
)

ocaml_signature(
    name     = "Client_proto_args_cmi",
    src      = "client_proto_args.mli",
    opts     = TEZOS_CLIENT_DEMO_COUNTER_OPTS,
    deps     = TEZOS_CLIENT_DEMO_COUNTER_DEPS + [
       ":Protocol_client_context",
    ]
)

ocaml_module(
    name     = "Client_proto_commands",
    struct   = "client_proto_commands.ml",
    sig      = ":Client_proto_commands_cmi",
    opts     = TEZOS_CLIENT_DEMO_COUNTER_OPTS,
    deps     = TEZOS_CLIENT_DEMO_COUNTER_DEPS + [
       ":Protocol_client_context",
    ]
)

ocaml_signature(
    name     = "Client_proto_commands_cmi",
    src      = "client_proto_commands.mli",
    opts     = TEZOS_CLIENT_DEMO_COUNTER_OPTS,
    deps     = TEZOS_CLIENT_DEMO_COUNTER_DEPS + [
       ":Protocol_client_context",
    ]
)

ocaml_module(
    name     = "Client_proto_main",
    struct   = "client_proto_main.ml",
    sig      = ":Client_proto_main_cmi",
    opts     = TEZOS_CLIENT_DEMO_COUNTER_OPTS,
    deps     = TEZOS_CLIENT_DEMO_COUNTER_DEPS + [
       ":Protocol_client_context",
       ":Client_proto_commands",
       ":Client_proto_args",
    ]
)

ocaml_signature(
    name     = "Client_proto_main_cmi",
    src      = "client_proto_main.mli",
    opts     = TEZOS_CLIENT_DEMO_COUNTER_OPTS,
    deps     = TEZOS_CLIENT_DEMO_COUNTER_DEPS + [
    ]
)

ocaml_module(
    name     = "Protocol_client_context",
    struct   = "protocol_client_context.ml",
    sig      = ":Protocol_client_context_cmi",
    opts     = TEZOS_CLIENT_DEMO_COUNTER_OPTS,
    deps     = TEZOS_CLIENT_DEMO_COUNTER_DEPS + [
    ]
)

ocaml_signature(
    name     = "Protocol_client_context_cmi",
    src      = "protocol_client_context.mli",
    opts     = TEZOS_CLIENT_DEMO_COUNTER_OPTS,
    deps     = TEZOS_CLIENT_DEMO_COUNTER_DEPS + [
    ]
)

