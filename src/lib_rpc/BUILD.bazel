load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_module", "ocaml_ns_library", "ocaml_signature")

ocaml_signature(
    name = "RPC_query_sig",
    src = ":RPC_query.mli",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    deps = ["@tezos//src/lib_error_monad:#Tezos_error_monad"],
)

ocaml_module(
    name = "RPC_query",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    sig = ":RPC_query_sig",
    struct = ":RPC_query.ml",
    deps = ["@tezos//src/lib_error_monad:#Tezos_error_monad"],
)

ocaml_signature(
    name = "RPC_arg_sig",
    src = ":RPC_arg.mli",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    deps = ["@tezos//src/lib_error_monad:#Tezos_error_monad"],
)

ocaml_module(
    name = "RPC_arg",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    sig = ":RPC_arg_sig",
    struct = ":RPC_arg.ml",
    deps = ["@tezos//src/lib_error_monad:#Tezos_error_monad"],
)

ocaml_signature(
    name = "RPC_description_sig",
    src = ":RPC_description.mli",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    deps = [
        ":RPC_context",
        ":RPC_encoding",
        ":RPC_service",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
    ],
)

ocaml_module(
    name = "RPC_description",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    sig = ":RPC_description_sig",
    struct = ":RPC_description.ml",
    deps = [
        ":RPC_context",
        ":RPC_encoding",
        ":RPC_service",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
    ],
)

ocaml_signature(
    name = "RPC_directory_sig",
    src = ":RPC_directory.mli",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    deps = [
        ":RPC_answer",
        ":RPC_encoding",
        ":RPC_service",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
    ],
)

ocaml_module(
    name = "RPC_directory",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    sig = ":RPC_directory_sig",
    struct = ":RPC_directory.ml",
    deps = [
        ":RPC_answer",
        ":RPC_encoding",
        ":RPC_service",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
    ],
)

ocaml_signature(
    name = "RPC_service_sig",
    src = ":RPC_service.mli",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    deps = [
        ":RPC_encoding",
        ":RPC_path",
        ":RPC_query",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
    ],
)

ocaml_module(
    name = "RPC_service",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    sig = ":RPC_service_sig",
    struct = ":RPC_service.ml",
    deps = [
        ":RPC_encoding",
        ":RPC_path",
        ":RPC_query",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
    ],
)

ocaml_signature(
    name = "RPC_answer_sig",
    src = ":RPC_answer.mli",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    deps = [
        ":RPC_service",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
    ],
)

ocaml_module(
    name = "RPC_answer",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    sig = ":RPC_answer_sig",
    struct = ":RPC_answer.ml",
    deps = [
        ":RPC_service",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
    ],
)

ocaml_signature(
    name = "RPC_context_sig",
    src = ":RPC_context.mli",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    deps = [
        ":RPC_directory",
        ":RPC_encoding",
        ":RPC_service",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
    ],
)

ocaml_module(
    name = "RPC_context",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    sig = ":RPC_context_sig",
    struct = ":RPC_context.ml",
    deps = [
        ":RPC_directory",
        ":RPC_encoding",
        ":RPC_service",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
    ],
)

ocaml_signature(
    name = "RPC_error_sig",
    src = ":RPC_error.mli",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    deps = [
        ":RPC_context",
        ":RPC_service",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
    ],
)

ocaml_module(
    name = "RPC_error",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    sig = ":RPC_error_sig",
    struct = ":RPC_error.ml",
    deps = [
        ":RPC_context",
        ":RPC_service",
        "@tezos//src/lib_error_monad:#Tezos_error_monad",
    ],
)

ocaml_signature(
    name = "RPC_encoding_sig",
    src = ":RPC_encoding.mli",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    deps = ["@tezos//src/lib_error_monad:#Tezos_error_monad"],
)

ocaml_module(
    name = "RPC_encoding",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    sig = ":RPC_encoding_sig",
    struct = ":RPC_encoding.ml",
    deps = ["@tezos//src/lib_error_monad:#Tezos_error_monad"],
)

ocaml_signature(
    name = "RPC_path_sig",
    src = ":RPC_path.mli",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    deps = ["@tezos//src/lib_error_monad:#Tezos_error_monad"],
)

ocaml_module(
    name = "RPC_path",
    deps_opam = [
        "data-encoding",
        "resto",
        "resto-directory",
    ],
    opts = [
        "-open",
        "Data_encoding",
        "-open",
        "Tezos_error_monad",
    ],
    sig = ":RPC_path_sig",
    struct = ":RPC_path.ml",
    deps = ["@tezos//src/lib_error_monad:#Tezos_error_monad"],
)

# okapi:auto
# okapi:public_name tezos-rpc
ocaml_ns_library(
    name = "#Tezos_rpc",
    submodules = [
        ":RPC_answer",
        ":RPC_arg",
        ":RPC_context",
        ":RPC_description",
        ":RPC_directory",
        ":RPC_encoding",
        ":RPC_error",
        ":RPC_path",
        ":RPC_query",
        ":RPC_service",
    ],
    visibility = ["//visibility:public"],
)
