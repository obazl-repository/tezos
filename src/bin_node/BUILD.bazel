load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_executable")
load("@obazl_rules_ocaml//dsl:library.bzl", "lib", "mod", "sig")

lib(
    name = "tezos-node",
    modules = dict(
        main = mod(
            ":node_run_command",
            ":node_replay_command",
            ":node_identity_command",
            ":node_config_command",
            ":node_upgrade_command",
            ":node_snapshot_command",
            ":node_reconstruct_command",
            ":node_storage_command",
        ),
        node_config_command = sig(":node_shared_arg", ":node_config_validation"),
        node_config_file = sig(":node_data_version"),
        node_config_validation = sig(":node_config_file"),
        node_data_version = sig(),
        node_directory = sig(":node_config_file", ":node_services"),
        node_identity_command = sig(
            ":node_data_version",
            ":node_config_file",
            ":node_identity_file",
            ":node_shared_arg",
        ),
        node_identity_file = sig(":node_data_version"),
        node_reconstruct_command = sig(":node_shared_arg", ":node_snapshot_command"),
        node_replay_command = sig(":node_config_file", ":node_shared_arg"),
        node_run_command = sig(
            ":node_config_file",
            ":node_identity_file",
            ":node_directory",
            ":node_config_validation",
            ":node_shared_arg",
        ),
        node_services = mod(":node_config_file"),
        node_shared_arg = sig("node_config_file"),
        node_snapshot_command = sig(":node_shared_arg"),
        node_storage_command = sig(":node_shared_arg"),
        node_upgrade_command = sig(":node_config_file", ":node_shared_arg"),
    ),
    deps = [
        "//src/lib_base:#Tezos_base",
        "//src/lib_stdlib:#Tezos_stdlib",
        "//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "//src/lib_base/unix:#Tezos_base_unix",
        "//src/lib_version:#Tezos_version",
        "//src/lib_shell_services:#Tezos_shell_services",
        "//src/lib_workers:#Tezos_workers",
        "//src/lib_rpc_http:#Tezos_rpc_http_server",
        "//src/lib_p2p:#Tezos_p2p",
        "//src/lib_shell:#Tezos_shell",
        "//src/lib_store:#Tezos_store",
        "//src/lib_context:#Tezos_context",
        "//src/bin_validation:#Tezos_validator",
        "//src/lib_protocol_environment:#Tezos_shell_context",
        "//src/lib_protocol_updater:#Tezos_protocol_updater",
        "//src/lib_protocol_compiler:#Tezos_protocol_compiler",
        "//src/lib_protocol_compiler:#Tezos_protocol_compiler_native",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_rpc_http",
        "-open",
        "Tezos_rpc_http_server",
        "-open",
        "Tezos_p2p",
        "-open",
        "Tezos_shell",
        "-open",
        "Tezos_store",
        "-open",
        "Tezos_context",
        "-open",
        "Tezos_validator",
        "-open",
        "Tezos_shell_context",
        "-open",
        "Tezos_workers",
        "-open",
        "Tezos_protocol_updater",
        "-linkall",
    ],
    deps_opam = [
        "cmdliner",
        "lwt-exit",
        "tls",
        "digestif",
    ],
)

ocaml_executable(
    name = "tezos-node",
    main = "main",
    deps_opam = [
        "cmdliner",
        "lwt-exit",
        "tls",
        "digestif",
    ],
    deps = [
        ":#Tezos_node",
    ],
    opts = [
        "-linkall",
    ],
)
