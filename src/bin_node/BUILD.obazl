load("@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_executable",
    "ocaml_module",
    "ocaml_signature",
)

##############################
####  Executable Targets  ####
TEZOS_NODE_OPTS = [
    "-linkall",
    # "-open", "Tezos_base",
    # "-open", "Tezos_base__TzPervasives",
    # "-open", "Tezos_context",
    # "-open", "Tezos_p2p",
    # "-open", "Tezos_protocol_updater",
    # "-open", "Tezos_rpc_http",
    # "-open", "Tezos_rpc_http_server",
    # "-open", "Tezos_shell",
    # "-open", "Tezos_shell_context",
    # "-open", "Tezos_shell_services",
    # "-open", "Tezos_stdlib_unix",
    # "-open", "Tezos_store",
    # "-open", "Tezos_validator",
    # "-open", "Tezos_workers",
]

TEZOS_NODE_DEPS = [
    # "//src/bin_validation:tezos-validator",
    # "//src/lib_base/unix:tezos-base.unix",
    # "//src/lib_base:tezos-base",
    # "//src/lib_context:tezos-context",
    # "//src/lib_p2p:tezos-p2p",
    # "//src/lib_protocol_environment:tezos-shell-context",
    # "//src/lib_protocol_updater:tezos-protocol-updater",
    # "//src/lib_rpc_http:tezos-rpc-http-server",
    # "//src/lib_shell:tezos-shell",
    # "//src/lib_shell_services:tezos-shell-services",
    # "//src/lib_stdlib_unix:tezos-stdlib-unix",
    # "//src/lib_store:tezos-store",
    # "//src/lib_version:tezos-version",
    # "//src/lib_workers:tezos-workers",
    "@cmdliner//:cmdliner",
    "@lwt-exit//:lwt-exit",
    "@tls//:tls",
]

#################
ocaml_executable(
    name    = "tezos-node.exe",
    visibility = ["//visibility:public"],
    exe     = "main",
    main    = ":Main",
    deps = TEZOS_NODE_DEPS + [
        ":Node_config_command",
        ":Node_config_file",
        ":Node_config_validation",
        ":Node_data_version",
        ":Node_directory",
        ":Node_identity_command",
        ":Node_identity_file",
        ":Node_reconstruct_command",
        ":Node_replay_command",
        ":Node_run_command",
        ":Node_services",
        ":Node_shared_arg",
        ":Node_snapshot_command",
        ":Node_storage_command",
        ":Node_upgrade_command",
    ],
)

#############################
####  Singleton Targets  ####

ocaml_module(
    name     = "Main",
    struct   = "main.ml",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        "-open", "Tezos_protocol_updater",
        "-open", "Tezos_validator",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
        "//src/bin_validation:tezos-validator",
        "//src/lib_protocol_updater:tezos-protocol-updater",
        ":Node_config_command",
        ":Node_config_file",
        ":Node_config_validation",
        ":Node_data_version",
        ":Node_directory",
        ":Node_identity_command",
        ":Node_identity_file",
        ":Node_reconstruct_command",
        ":Node_replay_command",
        ":Node_run_command",
        ":Node_services",
        ":Node_shared_arg",
        ":Node_snapshot_command",
        ":Node_storage_command",
        ":Node_upgrade_command",
    ]
)

ocaml_module(
    name     = "Node_config_command",
    struct   = "node_config_command.ml",
    sig      = ":Node_config_command_cmi",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        "-open", "Tezos_stdlib_unix"
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
        "//src/lib_stdlib_unix:tezos-stdlib-unix",
        ":Node_shared_arg",
        ":Node_config_validation",
        ":Node_config_file",
    ]
)

ocaml_signature(
    name     = "Node_config_command_cmi",
    src      = "node_config_command.mli",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
    ]
)

ocaml_module(
    name     = "Node_config_file",
    struct   = "node_config_file.ml",
    sig      = ":Node_config_file_cmi",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        "-open", "Tezos_p2p",
        "-open", "Tezos_rpc_http_server",
        "-open", "Tezos_shell",
        "-open", "Tezos_shell_services",
        "-open", "Tezos_stdlib_unix"
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
        "//src/lib_p2p:tezos-p2p",
        "//src/lib_rpc_http:tezos-rpc-http-server",
        "//src/lib_shell:tezos-shell",
        "//src/lib_shell_services:tezos-shell-services",
        "//src/lib_stdlib_unix:tezos-stdlib-unix",
       ":Node_data_version",
    ]
)

ocaml_signature(
    name     = "Node_config_file_cmi",
    src      = "node_config_file.mli",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        "-open", "Tezos_shell",
        "-open", "Tezos_shell_services",
        "-open", "Tezos_rpc_http_server",
        "-open", "Tezos_p2p",
        "-open", "Tezos_stdlib_unix"
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
        "//src/lib_p2p:tezos-p2p",
        "//src/lib_rpc_http:tezos-rpc-http-server",
        "//src/lib_shell:tezos-shell",
        "//src/lib_shell_services:tezos-shell-services",
        "//src/lib_stdlib_unix:tezos-stdlib-unix",
    ]
)

ocaml_module(
    name     = "Node_config_validation",
    struct   = "node_config_validation.ml",
    sig      = ":Node_config_validation_cmi",
    opts     = TEZOS_NODE_OPTS + [
        # "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        "-open", "Tezos_stdlib_unix"
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
        "//src/lib_stdlib_unix:tezos-stdlib-unix",
       ":Node_config_file",
    ]
)

ocaml_signature(
    name     = "Node_config_validation_cmi",
    src      = "node_config_validation.mli",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
       ":Node_config_file",
    ]
)

ocaml_module(
    name     = "Node_data_version",
    struct   = "node_data_version.ml",
    sig      = ":Node_data_version_cmi",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        "-open", "Tezos_shell",
        "-open", "Tezos_stdlib_unix",
        "-open", "Tezos_store",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
        "//src/lib_shell:tezos-shell",
        "//src/lib_stdlib_unix:tezos-stdlib-unix",
        "//src/lib_store:tezos-store",
    ]
)

ocaml_signature(
    name     = "Node_data_version_cmi",
    src      = "node_data_version.mli",
    opts     = TEZOS_NODE_OPTS + [
        # "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
    ]
)

ocaml_module(
    name     = "Node_directory",
    struct   = "node_directory.ml",
    sig      = ":Node_directory_cmi",
    opts     = TEZOS_NODE_OPTS + [
        # "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        # "-open", "Tezos_rpc_http_server",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
        # "//src/lib_rpc_http:tezos-rpc-http-server",
       ":Node_services",
    ]
)

ocaml_signature(
    name     = "Node_directory_cmi",
    src      = "node_directory.mli",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        # "-open", "Tezos_rpc_http_server",
    ],
    deps     = TEZOS_NODE_DEPS + [
        # "//src/lib_rpc_http:tezos-rpc-http-server",
        "//src/lib_base:tezos-base",
       ":Node_config_file",
    ]
)

ocaml_module(
    name     = "Node_identity_command",
    struct   = "node_identity_command.ml",
    sig      = ":Node_identity_command_cmi",
    opts     = TEZOS_NODE_OPTS + [
        # "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
       ":Node_shared_arg",
       ":Node_identity_file",
       ":Node_data_version",
       ":Node_config_file",
    ]
)

ocaml_signature(
    name     = "Node_identity_command_cmi",
    src      = "node_identity_command.mli",
    opts     = TEZOS_NODE_OPTS,
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
    ]
)

ocaml_module(
    name     = "Node_identity_file",
    struct   = "node_identity_file.ml",
    sig      = ":Node_identity_file_cmi",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        "-open", "Tezos_stdlib_unix",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
        "//src/lib_stdlib_unix:tezos-stdlib-unix",
       ":Node_data_version",
    ]
)

ocaml_signature(
    name     = "Node_identity_file_cmi",
    src      = "node_identity_file.mli",
    opts     = TEZOS_NODE_OPTS + [
        # "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
    ]
)

ocaml_module(
    name     = "Node_reconstruct_command",
    struct   = "node_reconstruct_command.ml",
    sig      = ":Node_reconstruct_command_cmi",
    opts     = TEZOS_NODE_OPTS + [
        # "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        "-open", "Tezos_shell",
        "-open", "Tezos_stdlib_unix",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
        "//src/lib_shell:tezos-shell",
        "//src/lib_stdlib_unix:tezos-stdlib-unix",
        ":Node_snapshot_command",
        ":Node_shared_arg",
        ":Node_data_version",
        ":Node_config_file",
    ]
)

ocaml_signature(
    name     = "Node_reconstruct_command_cmi",
    src      = "node_reconstruct_command.mli",
    opts     = TEZOS_NODE_OPTS,
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
    ]
)

ocaml_module(
    name     = "Node_replay_command",
    struct   = "node_replay_command.ml",
    sig      = ":Node_replay_command_cmi",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        "-open", "Tezos_protocol_updater",
        "-open", "Tezos_shell",
        "-open", "Tezos_shell_services",
        "-open", "Tezos_store",
        "-open", "Tezos_stdlib_unix",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
        "//src/lib_protocol_updater:tezos-protocol-updater",
        "//src/lib_shell:tezos-shell",
        "//src/lib_shell_services:tezos-shell-services",
        "//src/lib_store:tezos-store",
        "//src/lib_stdlib_unix:tezos-stdlib-unix",
       ":Node_shared_arg",
       ":Node_data_version",
       ":Node_config_file",
    ]
)

ocaml_signature(
    name     = "Node_replay_command_cmi",
    src      = "node_replay_command.mli",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
    ]
)

ocaml_module(
    name     = "Node_run_command",
    struct   = "node_run_command.ml",
    sig      = ":Node_run_command_cmi",
    opts     = TEZOS_NODE_OPTS + [
        # "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        "-open", "Tezos_p2p",
        "-open", "Tezos_protocol_updater",
        "-open", "Tezos_rpc_http_server",
        "-open", "Tezos_shell",
        "-open", "Tezos_shell_services",
        "-open", "Tezos_stdlib_unix",
        "-open", "Tezos_store",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
        "//src/lib_p2p:tezos-p2p",
        "//src/lib_protocol_updater:tezos-protocol-updater",
        "//src/lib_rpc_http:tezos-rpc-http-server",
        "//src/lib_shell:tezos-shell",
        "//src/lib_shell_services:tezos-shell-services",
        "//src/lib_stdlib_unix:tezos-stdlib-unix",
        "//src/lib_store:tezos-store",
       ":Node_shared_arg",
       ":Node_identity_file",
       ":Node_directory",
       ":Node_data_version",
       ":Node_config_validation",
       ":Node_config_file",
    ]
)

ocaml_signature(
    name     = "Node_run_command_cmi",
    src      = "node_run_command.mli",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        # "-open", "Tezos_base__TzPervasives",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
    ]
)

ocaml_module(
    name     = "Node_services",
    struct   = "node_services.ml",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        # "-open", "Tezos_rpc_http_server",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
        # "//src/lib_rpc_http:tezos-rpc-http-server",
       ":Node_config_file",
    ]
)

ocaml_module(
    name     = "Node_shared_arg",
    struct   = "node_shared_arg.ml",
    sig      = ":Node_shared_arg_cmi",
    opts     = TEZOS_NODE_OPTS + [
        # "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        "-open", "Tezos_shell_services",
        "-open", "Tezos_stdlib_unix",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
        "//src/lib_shell_services:tezos-shell-services",
        "//src/lib_stdlib_unix:tezos-stdlib-unix",
       ":Node_data_version",
       ":Node_config_file",
    ]
)

ocaml_signature(
    name     = "Node_shared_arg_cmi",
    src      = "node_shared_arg.mli",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        "-open", "Tezos_shell_services",
        "-open", "Tezos_stdlib_unix",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_shell_services:tezos-shell-services",
        "//src/lib_stdlib_unix:tezos-stdlib-unix",
       ":Node_config_file",
    ]
)

ocaml_module(
    name     = "Node_snapshot_command",
    struct   = "node_snapshot_command.ml",
    sig      = ":Node_snapshot_command_cmi",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        "-open", "Tezos_shell",
        "-open", "Tezos_shell_services",
        "-open", "Tezos_stdlib_unix",
        "-open", "Tezos_store",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
        "//src/lib_shell:tezos-shell",
        "//src/lib_shell_services:tezos-shell-services",
        "//src/lib_stdlib_unix:tezos-stdlib-unix",
        "//src/lib_store:tezos-store",
        ":Node_shared_arg",
        ":Node_data_version",
        ":Node_config_file",
    ]
)

ocaml_signature(
    name     = "Node_snapshot_command_cmi",
    src      = "node_snapshot_command.mli",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
    ]
)

ocaml_module(
    name     = "Node_storage_command",
    struct   = "node_storage_command.ml",
    sig      = ":Node_storage_command_cmi",
    opts     = TEZOS_NODE_OPTS + [
        # "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        "-open", "Tezos_context",
        "-open", "Tezos_store",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
        "//src/lib_context:tezos-context",
        "//src/lib_store:tezos-store",
       ":Node_shared_arg",
       ":Node_data_version",
       ":Node_config_file",
    ]
)

ocaml_signature(
    name     = "Node_storage_command_cmi",
    src      = "node_storage_command.mli",
    opts     = TEZOS_NODE_OPTS,
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
    ]
)

ocaml_module(
    name     = "Node_upgrade_command",
    struct   = "node_upgrade_command.ml",
    sig      = ":Node_upgrade_command_cmi",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
        "-open", "Tezos_stdlib_unix",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
        "//src/lib_stdlib_unix:tezos-stdlib-unix",
        ":Node_shared_arg",
        ":Node_data_version",
        ":Node_config_file",
    ]
)

ocaml_signature(
    name     = "Node_upgrade_command_cmi",
    src      = "node_upgrade_command.mli",
    opts     = TEZOS_NODE_OPTS + [
        "-open", "Tezos_base",
        "-open", "Tezos_base__TzPervasives",
    ],
    deps     = TEZOS_NODE_DEPS + [
        "//src/lib_base:tezos-base",
    ]
)

########################
####  Rule Targets  ####

################  rule  ################
## (
##   (action (progn (write-file void_for_linking-embedded-protocol-genesis.empty "") (write-file void_for_linking-embedded-protocol-genesis-carthagenet.empty "") (write-file void_for_linking-demo-noops.empty "") (write-file void_for_linking-demo-counter.empty "") (write-file void_for_linking-alpha.empty "") (write-file void_for_linking-000-Ps9mPmXa.empty "") (write-file void_for_linking-001-PtCJ7pwo.empty "") (write-file void_for_linking-002-PsYLVpVv.empty "") (write-file void_for_linking-003-PsddFKi3.empty "") (write-file void_for_linking-004-Pt24m4xi.empty "") (write-file void_for_linking-005-PsBABY5H.empty "") (write-file void_for_linking-005-PsBabyM1.empty "") (write-file void_for_linking-006-PsCARTHA.empty "") (write-file void_for_linking-007-PsDELPH1.empty "") (write-file void_for_linking-008-PtEdoTez.empty "") (write-file void_for_linking-008-PtEdo2Zk.empty "") (write-file void_for_linking-009-PsFLoren.empty "") (write-file void_for_linking-010-PtGRANAD.empty "") (write-file void_for_linking-alpha-protocol-plugin-registerer.empty "") (write-file void_for_linking-008-PtEdo2Zk-protocol-plugin-registerer.empty "") (write-file void_for_linking-009-PsFLoren-protocol-plugin-registerer.empty "") (write-file void_for_linking-010-PtGRANAD-protocol-plugin-registerer.empty "")))
## )
