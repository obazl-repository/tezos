load("@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_module",
    "ocaml_ns_archive",
    "ocaml_signature",
)

###############################################
########### Archive/Library Targets ###########

######## tezos-client-009-PsFLoren-commands ########
TEZOS_CLIENT_009_PSFLOREN_COMMANDS_OPTS = [
    "-open", "Tezos_base__TzPervasives",
    "-open", "Tezos_client_009_PsFLoren",
    "-open", "Tezos_client_base",
    "-open", "Tezos_client_base_unix",
    "-open", "Tezos_client_commands",
    "-open", "Tezos_protocol_009_PsFLoren",
    "-open", "Tezos_protocol_plugin_009_PsFLoren",
    "-open", "Tezos_rpc",
    "-open", "Tezos_shell_services",
    "-open", "Tezos_stdlib_unix",
]

TEZOS_CLIENT_009_PSFLOREN_COMMANDS_DEPS = [
    "//src/lib_base:tezos-base",
    "//src/lib_client_base_unix:tezos-client-base-unix",
    "//src/lib_client_commands:tezos-client-commands",
    "//src/lib_mockup:tezos-mockup",
    "//src/lib_mockup:tezos-mockup-commands",
    "//src/lib_mockup:tezos-mockup-registration",
    "//src/lib_protocol_environment:tezos-protocol-environment",
    "//src/lib_rpc:tezos-rpc",
    "//src/lib_shell_services:tezos-shell-services",
    "//src/lib_stdlib_unix:tezos-stdlib-unix",
    "//src/proto_009_PsFLoren/lib_client:tezos-client-009-PsFLoren",
    "//src/proto_009_PsFLoren/lib_plugin:tezos-protocol-plugin-009-PsFLoren",
    "//src/proto_009_PsFLoren/lib_protocol:tezos-protocol-009-PsFLoren",
]

ocaml_ns_archive(
    name       = "tezos-client-009-PsFLoren-commands",
    ns         = "Tezos_client_009_PsFLoren_commands",
    visibility = ["//visibility:public"],
    submodules = [
        ":Client_proto_context_commands",
        ":Client_proto_contracts_commands",
        ":Client_proto_mockup_commands",
        ":Client_proto_multisig_commands",
        ":Client_proto_programs_commands",
        ":Client_proto_utils_commands",
    ],
)

######## tezos-client-009-PsFLoren-commands-registration ########
TEZOS_CLIENT_009_PSFLOREN_COMMANDS_REGISTRATION_OPTS = [
    "-open", "Tezos_base__TzPervasives",
    "-open", "Tezos_client_009_PsFLoren",
    "-open", "Tezos_client_009_PsFLoren_commands",
    "-open", "Tezos_client_base",
    "-open", "Tezos_client_commands",
    "-open", "Tezos_client_sapling_009_PsFLoren",
    "-open", "Tezos_protocol_009_PsFLoren",
    "-open", "Tezos_protocol_plugin_009_PsFLoren",
    "-open", "Tezos_rpc",
    "-open", "Tezos_shell_services",
]

TEZOS_CLIENT_009_PSFLOREN_COMMANDS_REGISTRATION_DEPS = [
    "//src/lib_base:tezos-base",
    "//src/lib_client_base:tezos-client-base",
    "//src/lib_client_commands:tezos-client-commands",
    "//src/lib_protocol_environment:tezos-protocol-environment",
    "//src/lib_rpc:tezos-rpc",
    "//src/lib_shell_services:tezos-shell-services",
    "//src/proto_009_PsFLoren/lib_client:tezos-client-009-PsFLoren",
    "//src/proto_009_PsFLoren/lib_client_commands:tezos-client-009-PsFLoren-commands",
    "//src/proto_009_PsFLoren/lib_client_sapling:tezos-client-sapling-009-PsFLoren",
    "//src/proto_009_PsFLoren/lib_plugin:tezos-protocol-plugin-009-PsFLoren",
    "//src/proto_009_PsFLoren/lib_protocol:tezos-protocol-009-PsFLoren",
]

ocaml_ns_archive(
    name       = "tezos-client-009-PsFLoren-commands-registration",
    ns         = "Tezos_client_009_PsFLoren_commands_registration",
    visibility = ["//visibility:public"],
    submodules = [
        ":Alpha_commands_registration",
    ],
)

#############################
####  Singleton Targets  ####

ocaml_module(
    name     = "Alpha_commands_registration",
    struct   = "alpha_commands_registration.ml",
    opts     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_REGISTRATION_OPTS,
    deps     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_REGISTRATION_DEPS + [
    ]
)

ocaml_module(
    name     = "Client_proto_context_commands",
    struct   = "client_proto_context_commands.ml",
    opts     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_OPTS,
    deps     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_DEPS + [
    ]
)

ocaml_module(
    name     = "Client_proto_contracts_commands",
    struct   = "client_proto_contracts_commands.ml",
    opts     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_OPTS,
    deps     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_DEPS + [
    ]
)

ocaml_module(
    name     = "Client_proto_mockup_commands",
    struct   = "client_proto_mockup_commands.ml",
    sig      = ":Client_proto_mockup_commands_cmi",
    opts     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_OPTS,
    deps     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_DEPS + [
    ]
)

ocaml_signature(
    name     = "Client_proto_mockup_commands_cmi",
    src      = "client_proto_mockup_commands.mli",
    opts     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_OPTS,
    deps     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_DEPS + [
    ]
)

ocaml_module(
    name     = "Client_proto_multisig_commands",
    struct   = "client_proto_multisig_commands.ml",
    sig      = ":Client_proto_multisig_commands_cmi",
    opts     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_OPTS,
    deps     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_DEPS + [
       ":Client_proto_context_commands",
    ]
)

ocaml_signature(
    name     = "Client_proto_multisig_commands_cmi",
    src      = "client_proto_multisig_commands.mli",
    opts     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_OPTS,
    deps     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_DEPS + [
    ]
)

ocaml_module(
    name     = "Client_proto_programs_commands",
    struct   = "client_proto_programs_commands.ml",
    sig      = ":Client_proto_programs_commands_cmi",
    opts     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_OPTS,
    deps     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_DEPS + [
    ]
)

ocaml_signature(
    name     = "Client_proto_programs_commands_cmi",
    src      = "client_proto_programs_commands.mli",
    opts     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_OPTS,
    deps     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_DEPS + [
    ]
)

ocaml_module(
    name     = "Client_proto_utils_commands",
    struct   = "client_proto_utils_commands.ml",
    sig      = ":Client_proto_utils_commands_cmi",
    opts     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_OPTS,
    deps     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_DEPS + [
    ]
)

ocaml_signature(
    name     = "Client_proto_utils_commands_cmi",
    src      = "client_proto_utils_commands.mli",
    opts     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_OPTS,
    deps     = TEZOS_CLIENT_009_PSFLOREN_COMMANDS_DEPS + [
    ]
)

