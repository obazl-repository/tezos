load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_module",
     "ocaml_ns_archive",
     "ocaml_ns_library",
     "ocaml_signature")

DEPS_OPAM = [
    # "@ocaml//ffi",
    "@ctypes//foreign",
    "@ctypes//stubs",
    "@hex//:hex",
    "@data-encoding//:data-encoding",
]

ocaml_signature(
    name = "rustzcash__sig",
    src = ":rustzcash.mli",
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
    ],
    deps = DEPS_OPAM + [
        ":rustzcash_sig",
        "@tezos//src/lib_crypto:Tezos_crypto",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_module(
    name = "rustzcash",
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
        # "-ccopt", "-fvisibility=default",
        # "-ccopt", "-fvisibility-inlines-hidden",
    ],
    sig = ":rustzcash__sig",
    struct = ":rustzcash.ml",
    # cc_deps = {
    #     # "//src/lib_sapling/bindings:librustzcash_ctypes_c_stubs.so": "default"
    #     "//src/lib_sapling/bindings:rustzcash_ctypes_c_stubs": "static",
    #     # "@tezos-rust-libs//:librustzcash": "static",
    # },
    deps = [
        ":rustzcash_sig",
        "//src/lib_sapling/bindings:rustzcash_ctypes_bindings",
        "//src/lib_sapling/bindings:rustzcash_ctypes_stubs",
        "@tezos//src/lib_crypto:Tezos_crypto",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
        "@ocaml//ffi",
        # "@ocaml//ffi/foreign",
        # "@ocaml//ffi/stubs",
        "@hex//:hex",
        "@data-encoding//:data-encoding",
    ],
)

ocaml_module(
    name = "core",
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
    ],
    struct = ":core.ml",
    deps = DEPS_OPAM + [
        ":core_sig",
        ":rustzcash",
        "@tezos//src/lib_crypto:Tezos_crypto",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_module(
    name = "core_sig",
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
    ],
    struct = ":core_sig.ml",
    deps = DEPS_OPAM + [
        "@tezos//src/lib_crypto:Tezos_crypto",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_module(
    name = "rustzcash_sig",
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
    ],
    struct = "rustzcash_sig.ml",
    deps = DEPS_OPAM + [
        "@tezos//src/lib_crypto:Tezos_crypto",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_module(
    name = "storage",
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
    ],
    struct = ":storage.ml",
    deps = DEPS_OPAM + [
        ":core",
        ":core_sig",
        ":storage_sig",
        "@tezos//src/lib_crypto:Tezos_crypto",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_module(
    name = "storage_sig",
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
    ],
    struct = ":storage_sig.ml",
    deps = DEPS_OPAM + [
        ":core",
        "@tezos//src/lib_crypto:Tezos_crypto",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_signature(
    name = "forge__sig",
    src = ":forge.mli",
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
    ],
    deps = DEPS_OPAM + [
        ":core",
        ":storage",
        "@tezos//src/lib_crypto:Tezos_crypto",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

ocaml_module(
    name = "forge",
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_error_monad.TzLwtreslib",
    ],
    sig = ":forge__sig",
    struct = ":forge.ml",
    deps = DEPS_OPAM + [
        ":core",
        ":storage",
        "@tezos//src/lib_crypto:Tezos_crypto",
        "@tezos//src/lib_error_monad:Tezos_error_monad",
        "@tezos//src/lib_lwt_result_stdlib:Tezos_lwt_result_stdlib",
        "@tezos//src/lib_stdlib:Tezos_stdlib",
    ],
)

# okapi:auto
# okapi:public_name tezos-sapling
ocaml_ns_archive(
#ocaml_ns_library(
    name = "Tezos_sapling",
    submodules = [
        ":core",
        ":core_sig",
        ":forge",
        ":rustzcash",
        ":rustzcash_sig",
        ":storage",
        ":storage_sig",
    ],
    visibility = ["//visibility:public"],
)
