load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_module", "ocaml_ns_library", "ocaml_signature")

ocaml_module(
    name = "test_tez",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    struct = ":test_tez.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "testable",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    struct = ":testable.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "block_sig",
    src = ":block.mli",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    deps = [
        ":account",
        ":nonce",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "block",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    sig = ":block_sig",
    struct = ":block.ml",
    deps = [
        ":account",
        ":nonce",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "sapling_helpers",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    struct = ":sapling_helpers.ml",
    deps = [
        ":block",
        ":context",
        ":contract_helpers",
        ":incremental",
        ":op",
        ":test_tez",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "nonce_sig",
    src = ":nonce.mli",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "nonce",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    sig = ":nonce_sig",
    struct = ":nonce.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "contract_helpers",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    struct = ":contract_helpers.ml",
    deps = [
        ":block",
        ":context",
        ":incremental",
        ":op",
        ":test_tez",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "rewards",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    struct = ":rewards.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "context_sig",
    src = ":context.mli",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    deps = [
        ":account",
        ":block",
        ":incremental",
        ":test_tez",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "context",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    sig = ":context_sig",
    struct = ":context.ml",
    deps = [
        ":account",
        ":block",
        ":incremental",
        ":test_tez",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "assert",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    struct = ":assert.ml",
    deps = [
        ":context",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "expr",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    struct = ":expr.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "account_sig",
    src = ":account.mli",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "account",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    sig = ":account_sig",
    struct = ":account.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "incremental_sig",
    src = ":incremental.mli",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    deps = [
        ":account",
        ":block",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "incremental",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    sig = ":incremental_sig",
    struct = ":incremental.ml",
    deps = [
        ":account",
        ":block",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "op_sig",
    src = ":op.mli",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    deps = [
        ":account",
        ":context",
        ":test_tez",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "op",
    deps_opam = [
        "alcotest-lwt",
        "tezos-protocol-alpha",
    ],
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
        "-open",
        "Tezos_shell_services",
    ],
    sig = ":op_sig",
    struct = ":op.ml",
    deps = [
        ":account",
        ":context",
        ":test_tez",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_protocol_environment:#Tezos_protocol_environment",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

# okapi:auto
ocaml_ns_library(
    name = "#Tezos_alpha_test_helpers",
    submodules = [
        ":account",
        ":assert",
        ":block",
        ":context",
        ":contract_helpers",
        ":expr",
        ":incremental",
        ":nonce",
        ":op",
        ":rewards",
        ":sapling_helpers",
        ":test_tez",
        ":testable",
    ],
    visibility = ["//visibility:public"],
)
