load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_module", "ocaml_ns_archive", "ocaml_signature")

ocaml_module(
    name = "client_proto_context_commands",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_commands",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_client_base_unix",
        "-open",
        "Tezos_protocol_plugin_alpha",
    ],
    struct = ":client_proto_context_commands.ml",
    deps = [
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base_unix:#Tezos_client_base_unix",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_protocol_environment:lib-tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "client_proto_contracts_commands",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_commands",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_client_base_unix",
        "-open",
        "Tezos_protocol_plugin_alpha",
    ],
    struct = ":client_proto_contracts_commands.ml",
    deps = [
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base_unix:#Tezos_client_base_unix",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_protocol_environment:lib-tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "client_proto_mockup_commands__sig",
    src = ":client_proto_mockup_commands.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_commands",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_client_base_unix",
        "-open",
        "Tezos_protocol_plugin_alpha",
    ],
    deps = [
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base_unix:#Tezos_client_base_unix",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_protocol_environment:lib-tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "client_proto_mockup_commands",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_commands",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_client_base_unix",
        "-open",
        "Tezos_protocol_plugin_alpha",
    ],
    sig = ":client_proto_mockup_commands__sig",
    struct = ":client_proto_mockup_commands.ml",
    deps = [
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base_unix:#Tezos_client_base_unix",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_protocol_environment:lib-tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "client_proto_multisig_commands__sig",
    src = ":client_proto_multisig_commands.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_commands",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_client_base_unix",
        "-open",
        "Tezos_protocol_plugin_alpha",
    ],
    deps = [
        ":client_proto_context_commands",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base_unix:#Tezos_client_base_unix",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_protocol_environment:lib-tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "client_proto_multisig_commands",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_commands",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_client_base_unix",
        "-open",
        "Tezos_protocol_plugin_alpha",
    ],
    sig = ":client_proto_multisig_commands__sig",
    struct = ":client_proto_multisig_commands.ml",
    deps = [
        ":client_proto_context_commands",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base_unix:#Tezos_client_base_unix",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_protocol_environment:lib-tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "client_proto_programs_commands__sig",
    src = ":client_proto_programs_commands.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_commands",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_client_base_unix",
        "-open",
        "Tezos_protocol_plugin_alpha",
    ],
    deps = [
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base_unix:#Tezos_client_base_unix",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_protocol_environment:lib-tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "client_proto_programs_commands",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_commands",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_client_base_unix",
        "-open",
        "Tezos_protocol_plugin_alpha",
    ],
    sig = ":client_proto_programs_commands__sig",
    struct = ":client_proto_programs_commands.ml",
    deps = [
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base_unix:#Tezos_client_base_unix",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_protocol_environment:lib-tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "client_proto_stresstest_commands",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_commands",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_client_base_unix",
        "-open",
        "Tezos_protocol_plugin_alpha",
    ],
    struct = ":client_proto_stresstest_commands.ml",
    deps = [
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base_unix:#Tezos_client_base_unix",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_protocol_environment:lib-tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "client_proto_utils_commands__sig",
    src = ":client_proto_utils_commands.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_commands",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_client_base_unix",
        "-open",
        "Tezos_protocol_plugin_alpha",
    ],
    deps = [
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base_unix:#Tezos_client_base_unix",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_protocol_environment:lib-tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

ocaml_module(
    name = "client_proto_utils_commands",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_commands",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_client_base_unix",
        "-open",
        "Tezos_protocol_plugin_alpha",
    ],
    sig = ":client_proto_utils_commands__sig",
    struct = ":client_proto_utils_commands.ml",
    deps = [
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base_unix:#Tezos_client_base_unix",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup",
        "@tezos//src/lib_mockup:#Tezos_mockup_commands",
        "@tezos//src/lib_mockup:#Tezos_mockup_registration",
        "@tezos//src/lib_protocol_environment:lib-tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

# okapi:auto
# okapi:public_name tezos-client-alpha-commands
ocaml_ns_archive(
    name = "#Tezos_client_alpha_commands",
    submodules = [
        ":client_proto_context_commands",
        ":client_proto_contracts_commands",
        ":client_proto_mockup_commands",
        ":client_proto_multisig_commands",
        ":client_proto_programs_commands",
        ":client_proto_stresstest_commands",
        ":client_proto_utils_commands",
    ],
    visibility = ["//visibility:public"],
)

ocaml_module(
    name = "alpha_commands_registration",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_commands",
        "-open",
        "Tezos_client_alpha_commands",
        "-open",
        "Tezos_client_sapling_alpha",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_protocol_plugin_alpha",
    ],
    struct = ":alpha_commands_registration.ml",
    deps = [
        ":client_proto_context_commands",
        ":client_proto_contracts_commands",
        ":client_proto_mockup_commands",
        ":client_proto_multisig_commands",
        ":client_proto_programs_commands",
        ":client_proto_stresstest_commands",
        ":client_proto_utils_commands",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_client_base:#Tezos_client_base",
        "@tezos//src/lib_client_commands:#Tezos_client_commands",
        "@tezos//src/lib_protocol_environment:lib-tezos_protocol_environment",
        "@tezos//src/lib_rpc:#Tezos_rpc",
        "@tezos//src/lib_shell_services:#Tezos_shell_services",
        "@tezos//src/proto_alpha/lib_client:#Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_client_commands:#Tezos_client_alpha_commands",
        "@tezos//src/proto_alpha/lib_client_sapling:#Tezos_client_sapling_alpha",
        "@tezos//src/proto_alpha/lib_plugin:#Tezos_protocol_plugin_alpha",
    ],
)

# okapi:public_name tezos-client-alpha-commands-registration
ocaml_ns_archive(
    name = "#Tezos_client_alpha_commands_registration",
    submodules = [":alpha_commands_registration"],
    visibility = ["//visibility:public"],
)
