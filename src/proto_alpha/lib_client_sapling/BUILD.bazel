load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_module", "ocaml_ns_library", "ocaml_signature")

ocaml_signature(
    name = "client_sapling_commands__sig",
    src = ":client_sapling_commands.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_alpha_commands",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
    ],
    deps = [
        ":context",
        ":wallet",
        "@tezos-protocol-alpha//:tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_crypto:Tezos_crypto",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_client:Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_client_commands:Tezos_client_alpha_commands",
    ],
)

ocaml_module(
    name = "client_sapling_commands",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_alpha_commands",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
    ],
    sig = ":client_sapling_commands__sig",
    struct = ":client_sapling_commands.ml",
    deps = [
        ":context",
        ":wallet",
        "@tezos-protocol-alpha//:tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_crypto:Tezos_crypto",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_client:Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_client_commands:Tezos_client_alpha_commands",
    ],
)

ocaml_signature(
    name = "context__sig",
    src = ":context.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_alpha_commands",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
    ],
    deps = [
        "@tezos-protocol-alpha//:tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_crypto:Tezos_crypto",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_client:Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_client_commands:Tezos_client_alpha_commands",
    ],
)

ocaml_module(
    name = "context",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_alpha_commands",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
    ],
    sig = ":context__sig",
    struct = ":context.ml",
    deps = [
        "@tezos-protocol-alpha//:tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_crypto:Tezos_crypto",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_client:Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_client_commands:Tezos_client_alpha_commands",
    ],
)

ocaml_signature(
    name = "wallet__sig",
    src = ":wallet.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_alpha_commands",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
    ],
    deps = [
        "@tezos-protocol-alpha//:tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_crypto:Tezos_crypto",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_client:Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_client_commands:Tezos_client_alpha_commands",
    ],
)

ocaml_module(
    name = "wallet",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_stdlib_unix",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_client_alpha",
        "-open",
        "Tezos_client_alpha_commands",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_environment_alpha",
    ],
    sig = ":wallet__sig",
    struct = ":wallet.ml",
    deps = [
        "@tezos-protocol-alpha//:tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_crypto:Tezos_crypto",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_client:Tezos_client_alpha",
        "@tezos//src/proto_alpha/lib_client_commands:Tezos_client_alpha_commands",
    ],
)

# okapi:auto
# okapi:public_name tezos-client-sapling-alpha
ocaml_ns_library(
    name = "Tezos_client_sapling_alpha",
    submodules = [
        ":client_sapling_commands",
        ":context",
        ":wallet",
    ],
    visibility = ["//visibility:public"],
)
