load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_signature", "ppx_executable", "ppx_module", "ppx_ns_archive")

ppx_executable(
    name = "ppx_tezos_client_alpha",
    deps = ["@ocaml//lib/ppx_inline_test"],
    main = "@ppx//driver",
)

ocaml_signature(
    name = "annotated_manager_operation__sig",
    src = ":annotated_manager_operation.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    deps = [
        ":limit",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "annotated_manager_operation",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    sig = ":annotated_manager_operation__sig",
    struct = ":annotated_manager_operation.ml",
    deps = [
        ":limit",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "client_proto_args__sig",
    src = ":client_proto_args.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    deps = [
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "client_proto_args",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    sig = ":client_proto_args__sig",
    struct = ":client_proto_args.ml",
    deps = [
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "client_proto_context__sig",
    src = ":client_proto_context.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    deps = [
        ":annotated_manager_operation",
        ":client_proto_args",
        ":client_proto_contracts",
        ":injection",
        ":limit",
        ":michelson_v1_parser",
        ":operation_result",
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "client_proto_context",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    sig = ":client_proto_context__sig",
    struct = ":client_proto_context.ml",
    deps = [
        ":annotated_manager_operation",
        ":client_proto_args",
        ":client_proto_contracts",
        ":injection",
        ":limit",
        ":michelson_v1_parser",
        ":operation_result",
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "client_proto_contracts__sig",
    src = ":client_proto_contracts.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    deps = [
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "client_proto_contracts",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    sig = ":client_proto_contracts__sig",
    struct = ":client_proto_contracts.ml",
    deps = [
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "client_proto_multisig__sig",
    src = ":client_proto_multisig.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    deps = [
        ":client_proto_context",
        ":injection",
        ":managed_contract",
        ":michelson_v1_helpers",
        ":michelson_v1_parser",
        ":michelson_v1_printer",
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "client_proto_multisig",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    sig = ":client_proto_multisig__sig",
    struct = ":client_proto_multisig.ml",
    deps = [
        ":client_proto_context",
        ":injection",
        ":managed_contract",
        ":michelson_v1_helpers",
        ":michelson_v1_parser",
        ":michelson_v1_printer",
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "client_proto_programs__sig",
    src = ":client_proto_programs.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    deps = [
        ":michelson_v1_emacs",
        ":michelson_v1_entrypoints",
        ":michelson_v1_error_reporter",
        ":michelson_v1_parser",
        ":michelson_v1_printer",
        ":operation_result",
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "client_proto_programs",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    sig = ":client_proto_programs__sig",
    struct = ":client_proto_programs.ml",
    deps = [
        ":michelson_v1_emacs",
        ":michelson_v1_entrypoints",
        ":michelson_v1_error_reporter",
        ":michelson_v1_parser",
        ":michelson_v1_printer",
        ":operation_result",
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "client_proto_utils__sig",
    src = ":client_proto_utils.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    deps = [
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "client_proto_utils",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    sig = ":client_proto_utils__sig",
    struct = ":client_proto_utils.ml",
    deps = [
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "injection__sig",
    src = ":injection.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    deps = [
        ":annotated_manager_operation",
        ":client_proto_args",
        ":limit",
        ":operation_result",
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "injection",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    sig = ":injection__sig",
    struct = ":injection.ml",
    deps = [
        ":annotated_manager_operation",
        ":client_proto_args",
        ":limit",
        ":operation_result",
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "light",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    struct = ":light.ml",
    deps = [
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "limit__sig",
    src = ":limit.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    deps = [
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "limit",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    sig = ":limit__sig",
    struct = ":limit.ml",
    deps = [
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "managed_contract__sig",
    src = ":managed_contract.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    deps = [
        ":annotated_manager_operation",
        ":client_proto_context",
        ":injection",
        ":limit",
        ":michelson_v1_entrypoints",
        ":michelson_v1_parser",
        ":michelson_v1_printer",
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "managed_contract",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    sig = ":managed_contract__sig",
    struct = ":managed_contract.ml",
    deps = [
        ":annotated_manager_operation",
        ":client_proto_context",
        ":injection",
        ":limit",
        ":michelson_v1_entrypoints",
        ":michelson_v1_parser",
        ":michelson_v1_printer",
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "michelson_v1_emacs__sig",
    src = ":michelson_v1_emacs.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    deps = [
        ":michelson_v1_error_reporter",
        ":michelson_v1_macros",
        ":michelson_v1_parser",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "michelson_v1_emacs",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    sig = ":michelson_v1_emacs__sig",
    struct = ":michelson_v1_emacs.ml",
    deps = [
        ":michelson_v1_error_reporter",
        ":michelson_v1_macros",
        ":michelson_v1_parser",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "michelson_v1_entrypoints__sig",
    src = ":michelson_v1_entrypoints.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    deps = [
        ":michelson_v1_emacs",
        ":michelson_v1_printer",
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "michelson_v1_entrypoints",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    sig = ":michelson_v1_entrypoints__sig",
    struct = ":michelson_v1_entrypoints.ml",
    deps = [
        ":michelson_v1_emacs",
        ":michelson_v1_printer",
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "michelson_v1_error_reporter__sig",
    src = ":michelson_v1_error_reporter.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    deps = [
        ":michelson_v1_macros",
        ":michelson_v1_parser",
        ":michelson_v1_printer",
        ":operation_result",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "michelson_v1_error_reporter",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    sig = ":michelson_v1_error_reporter__sig",
    struct = ":michelson_v1_error_reporter.ml",
    deps = [
        ":michelson_v1_macros",
        ":michelson_v1_parser",
        ":michelson_v1_printer",
        ":operation_result",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "michelson_v1_helpers",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    struct = ":michelson_v1_helpers.ml",
    deps = [
        ":michelson_v1_parser",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "michelson_v1_macros__sig",
    src = ":michelson_v1_macros.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    deps = [
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "michelson_v1_macros",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    sig = ":michelson_v1_macros__sig",
    struct = ":michelson_v1_macros.ml",
    deps = [
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "michelson_v1_parser__sig",
    src = ":michelson_v1_parser.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    deps = [
        ":michelson_v1_macros",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "michelson_v1_parser",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    sig = ":michelson_v1_parser__sig",
    struct = ":michelson_v1_parser.ml",
    deps = [
        ":michelson_v1_macros",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "michelson_v1_printer__sig",
    src = ":michelson_v1_printer.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    deps = [
        ":michelson_v1_macros",
        ":michelson_v1_parser",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "michelson_v1_printer",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    sig = ":michelson_v1_printer__sig",
    struct = ":michelson_v1_printer.ml",
    deps = [
        ":michelson_v1_macros",
        ":michelson_v1_parser",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "mockup",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    struct = ":mockup.ml",
    deps = [
        ":client_proto_context",
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ocaml_signature(
    name = "operation_result__sig",
    src = ":operation_result.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    deps = [
        ":client_proto_args",
        ":michelson_v1_parser",
        ":michelson_v1_printer",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "operation_result",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    sig = ":operation_result__sig",
    struct = ":operation_result.ml",
    deps = [
        ":client_proto_args",
        ":michelson_v1_parser",
        ":michelson_v1_printer",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "protocol_client_context",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    struct = ":protocol_client_context.ml",
    deps = [
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

ppx_module(
    name = "proxy",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_shell_services",
        "-open",
        "Tezos_client_base",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_protocol_plugin_alpha",
        "-open",
        "Tezos_protocol_alpha_parameters",
        "-open",
        "Tezos_rpc",
    ],
    ppx = ":ppx_tezos_client_alpha",
    ppx_print = "@ppx//print:text",
    ppx_tags = ["inline-test"],
    struct = ":proxy.ml",
    deps = [
        ":light",
        ":protocol_client_context",
        "@ocaml//lib/ppx_inline_test",
        "@ocaml//lib/tezos-protocol-alpha",
        "@tezos//src/lib_base:Tezos_base",
        "@tezos//src/lib_client_base:Tezos_client_base",
        "@tezos//src/lib_mockup:Tezos_mockup_registration",
        "@tezos//src/lib_proxy:Tezos_proxy",
        "@tezos//src/lib_rpc:Tezos_rpc",
        "@tezos//src/lib_shell_services:Tezos_shell_services",
        "@tezos//src/lib_signer_backends:Tezos_signer_backends",
        "@tezos//src/proto_alpha/lib_parameters:Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_plugin:Tezos_protocol_plugin_alpha",
    ],
)

# okapi:auto
# okapi:public_name tezos-client-alpha
ppx_ns_archive(
    name = "Tezos_client_alpha",
    submodules = [
        ":annotated_manager_operation",
        ":client_proto_args",
        ":client_proto_context",
        ":client_proto_contracts",
        ":client_proto_multisig",
        ":client_proto_programs",
        ":client_proto_utils",
        ":injection",
        ":light",
        ":limit",
        ":managed_contract",
        ":michelson_v1_emacs",
        ":michelson_v1_entrypoints",
        ":michelson_v1_error_reporter",
        ":michelson_v1_helpers",
        ":michelson_v1_macros",
        ":michelson_v1_parser",
        ":michelson_v1_printer",
        ":mockup",
        ":operation_result",
        ":protocol_client_context",
        ":proxy",
    ],
    visibility = ["//visibility:public"],
)
