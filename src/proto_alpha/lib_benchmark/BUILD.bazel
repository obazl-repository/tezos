load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_module", "ocaml_ns_library")

ocaml_module(
    name = "generators",
    deps_opam = [
        "tezos-protocol-alpha",
        "hashcons",
        "benchmark-utils",
        "staTz",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_micheline_rewriting",
        "-open",
        "Tezos_benchmark",
        "-open",
        "Tezos_benchmark_type_inference_alpha",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_alpha_test_helpers",
    ],
    struct = ":generators.ml",
    deps = [
        ":autocomp",
        ":michelson",
        ":michelson_samplers_base",
        ":rules",
        ":sampler",
        ":state_space",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_benchmark:#Tezos_benchmark",
        "@tezos//src/lib_benchmark/lib_micheline_rewriting:#Tezos_micheline_rewriting",
        "@tezos//src/proto_alpha/lib_benchmark/lib_benchmark_type_inference:#Tezos_benchmark_type_inference_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_protocol/test/helpers:#Tezos_alpha_test_helpers",
    ],
)

ocaml_module(
    name = "sampler",
    deps_opam = [
        "tezos-protocol-alpha",
        "hashcons",
        "benchmark-utils",
        "staTz",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_micheline_rewriting",
        "-open",
        "Tezos_benchmark",
        "-open",
        "Tezos_benchmark_type_inference_alpha",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_alpha_test_helpers",
    ],
    struct = ":sampler.ml",
    deps = [
        ":kernel",
        ":rules",
        ":state_space",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_benchmark:#Tezos_benchmark",
        "@tezos//src/lib_benchmark/lib_micheline_rewriting:#Tezos_micheline_rewriting",
        "@tezos//src/proto_alpha/lib_benchmark/lib_benchmark_type_inference:#Tezos_benchmark_type_inference_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_protocol/test/helpers:#Tezos_alpha_test_helpers",
    ],
)

ocaml_module(
    name = "state_space",
    deps_opam = [
        "tezos-protocol-alpha",
        "hashcons",
        "benchmark-utils",
        "staTz",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_micheline_rewriting",
        "-open",
        "Tezos_benchmark",
        "-open",
        "Tezos_benchmark_type_inference_alpha",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_alpha_test_helpers",
    ],
    struct = ":state_space.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_benchmark:#Tezos_benchmark",
        "@tezos//src/lib_benchmark/lib_micheline_rewriting:#Tezos_micheline_rewriting",
        "@tezos//src/proto_alpha/lib_benchmark/lib_benchmark_type_inference:#Tezos_benchmark_type_inference_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_protocol/test/helpers:#Tezos_alpha_test_helpers",
    ],
)

ocaml_module(
    name = "michelson_samplers",
    deps_opam = [
        "tezos-protocol-alpha",
        "hashcons",
        "benchmark-utils",
        "staTz",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_micheline_rewriting",
        "-open",
        "Tezos_benchmark",
        "-open",
        "Tezos_benchmark_type_inference_alpha",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_alpha_test_helpers",
    ],
    struct = ":michelson_samplers.ml",
    deps = [
        ":execution_context",
        ":michelson_samplers_base",
        ":michelson_samplers_parameters",
        ":sampling_helpers",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_benchmark:#Tezos_benchmark",
        "@tezos//src/lib_benchmark/lib_micheline_rewriting:#Tezos_micheline_rewriting",
        "@tezos//src/proto_alpha/lib_benchmark/lib_benchmark_type_inference:#Tezos_benchmark_type_inference_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_protocol/test/helpers:#Tezos_alpha_test_helpers",
    ],
)

ocaml_module(
    name = "michelson_samplers_base",
    deps_opam = [
        "tezos-protocol-alpha",
        "hashcons",
        "benchmark-utils",
        "staTz",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_micheline_rewriting",
        "-open",
        "Tezos_benchmark",
        "-open",
        "Tezos_benchmark_type_inference_alpha",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_alpha_test_helpers",
    ],
    struct = ":michelson_samplers_base.ml",
    deps = [
        ":michelson_samplers_parameters",
        ":sampling_helpers",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_benchmark:#Tezos_benchmark",
        "@tezos//src/lib_benchmark/lib_micheline_rewriting:#Tezos_micheline_rewriting",
        "@tezos//src/proto_alpha/lib_benchmark/lib_benchmark_type_inference:#Tezos_benchmark_type_inference_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_protocol/test/helpers:#Tezos_alpha_test_helpers",
    ],
)

ocaml_module(
    name = "michelson_samplers_parameters",
    deps_opam = [
        "tezos-protocol-alpha",
        "hashcons",
        "benchmark-utils",
        "staTz",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_micheline_rewriting",
        "-open",
        "Tezos_benchmark",
        "-open",
        "Tezos_benchmark_type_inference_alpha",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_alpha_test_helpers",
    ],
    struct = ":michelson_samplers_parameters.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_benchmark:#Tezos_benchmark",
        "@tezos//src/lib_benchmark/lib_micheline_rewriting:#Tezos_micheline_rewriting",
        "@tezos//src/proto_alpha/lib_benchmark/lib_benchmark_type_inference:#Tezos_benchmark_type_inference_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_protocol/test/helpers:#Tezos_alpha_test_helpers",
    ],
)

ocaml_module(
    name = "rules",
    deps_opam = [
        "tezos-protocol-alpha",
        "hashcons",
        "benchmark-utils",
        "staTz",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_micheline_rewriting",
        "-open",
        "Tezos_benchmark",
        "-open",
        "Tezos_benchmark_type_inference_alpha",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_alpha_test_helpers",
    ],
    struct = ":rules.ml",
    deps = [
        ":kernel",
        ":michelson_samplers_base",
        ":state_space",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_benchmark:#Tezos_benchmark",
        "@tezos//src/lib_benchmark/lib_micheline_rewriting:#Tezos_micheline_rewriting",
        "@tezos//src/proto_alpha/lib_benchmark/lib_benchmark_type_inference:#Tezos_benchmark_type_inference_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_protocol/test/helpers:#Tezos_alpha_test_helpers",
    ],
)

ocaml_module(
    name = "sampling_helpers",
    deps_opam = [
        "tezos-protocol-alpha",
        "hashcons",
        "benchmark-utils",
        "staTz",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_micheline_rewriting",
        "-open",
        "Tezos_benchmark",
        "-open",
        "Tezos_benchmark_type_inference_alpha",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_alpha_test_helpers",
    ],
    struct = ":sampling_helpers.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_benchmark:#Tezos_benchmark",
        "@tezos//src/lib_benchmark/lib_micheline_rewriting:#Tezos_micheline_rewriting",
        "@tezos//src/proto_alpha/lib_benchmark/lib_benchmark_type_inference:#Tezos_benchmark_type_inference_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_protocol/test/helpers:#Tezos_alpha_test_helpers",
    ],
)

ocaml_module(
    name = "autocomp",
    deps_opam = [
        "tezos-protocol-alpha",
        "hashcons",
        "benchmark-utils",
        "staTz",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_micheline_rewriting",
        "-open",
        "Tezos_benchmark",
        "-open",
        "Tezos_benchmark_type_inference_alpha",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_alpha_test_helpers",
    ],
    struct = ":autocomp.ml",
    deps = [
        ":kernel",
        ":michelson_samplers_base",
        ":michelson_samplers_parameters",
        ":sampling_helpers",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_benchmark:#Tezos_benchmark",
        "@tezos//src/lib_benchmark/lib_micheline_rewriting:#Tezos_micheline_rewriting",
        "@tezos//src/proto_alpha/lib_benchmark/lib_benchmark_type_inference:#Tezos_benchmark_type_inference_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_protocol/test/helpers:#Tezos_alpha_test_helpers",
    ],
)

ocaml_module(
    name = "michelson",
    deps_opam = [
        "tezos-protocol-alpha",
        "hashcons",
        "benchmark-utils",
        "staTz",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_micheline_rewriting",
        "-open",
        "Tezos_benchmark",
        "-open",
        "Tezos_benchmark_type_inference_alpha",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_alpha_test_helpers",
    ],
    struct = ":michelson.ml",
    deps = [
        ":autocomp",
        ":kernel",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_benchmark:#Tezos_benchmark",
        "@tezos//src/lib_benchmark/lib_micheline_rewriting:#Tezos_micheline_rewriting",
        "@tezos//src/proto_alpha/lib_benchmark/lib_benchmark_type_inference:#Tezos_benchmark_type_inference_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_protocol/test/helpers:#Tezos_alpha_test_helpers",
    ],
)

ocaml_module(
    name = "kernel",
    deps_opam = [
        "tezos-protocol-alpha",
        "hashcons",
        "benchmark-utils",
        "staTz",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_micheline_rewriting",
        "-open",
        "Tezos_benchmark",
        "-open",
        "Tezos_benchmark_type_inference_alpha",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_alpha_test_helpers",
    ],
    struct = ":kernel.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_benchmark:#Tezos_benchmark",
        "@tezos//src/lib_benchmark/lib_micheline_rewriting:#Tezos_micheline_rewriting",
        "@tezos//src/proto_alpha/lib_benchmark/lib_benchmark_type_inference:#Tezos_benchmark_type_inference_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_protocol/test/helpers:#Tezos_alpha_test_helpers",
    ],
)

ocaml_module(
    name = "execution_context",
    deps_opam = [
        "tezos-protocol-alpha",
        "hashcons",
        "benchmark-utils",
        "staTz",
    ],
    opts = [
        "-open",
        "Tezos_stdlib",
        "-open",
        "Tezos_base",
        "-open",
        "Tezos_error_monad",
        "-open",
        "Tezos_micheline",
        "-open",
        "Tezos_micheline_rewriting",
        "-open",
        "Tezos_benchmark",
        "-open",
        "Tezos_benchmark_type_inference_alpha",
        "-open",
        "Tezos_protocol_alpha",
        "-open",
        "Tezos_crypto",
        "-open",
        "Tezos_alpha_test_helpers",
    ],
    struct = ":execution_context.ml",
    deps = [
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_benchmark:#Tezos_benchmark",
        "@tezos//src/lib_benchmark/lib_micheline_rewriting:#Tezos_micheline_rewriting",
        "@tezos//src/proto_alpha/lib_benchmark/lib_benchmark_type_inference:#Tezos_benchmark_type_inference_alpha",
        "@tezos//src/proto_alpha/lib_parameters:#Tezos_protocol_alpha_parameters",
        "@tezos//src/proto_alpha/lib_protocol/test/helpers:#Tezos_alpha_test_helpers",
    ],
)

# okapi:auto
ocaml_ns_library(
    name = "#Tezos_benchmark_alpha",
    submodules = [
        ":autocomp",
        ":execution_context",
        ":generators",
        ":kernel",
        ":michelson",
        ":michelson_samplers",
        ":michelson_samplers_base",
        ":michelson_samplers_parameters",
        ":rules",
        ":sampler",
        ":sampling_helpers",
        ":state_space",
    ],
    visibility = ["//visibility:public"],
)
