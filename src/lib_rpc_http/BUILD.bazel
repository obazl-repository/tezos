load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_module", "ocaml_ns_archive", "ocaml_signature")

ocaml_signature(
    name = "RPC_client_errors__sig",
    src = ":RPC_client_errors.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
    ],
    deps = [
        "@ocaml//lib/resto-cohttp",
        "@tezos//src/lib_base:#Tezos_base",
    ],
)

ocaml_module(
    name = "RPC_client_errors",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
    ],
    sig = ":RPC_client_errors__sig",
    struct = ":RPC_client_errors.ml",
    deps = [
        "@ocaml//lib/resto-cohttp",
        "@tezos//src/lib_base:#Tezos_base",
    ],
)

ocaml_signature(
    name = "media_type__sig",
    src = ":media_type.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
    ],
    deps = [
        "@ocaml//lib/resto-cohttp",
        "@tezos//src/lib_base:#Tezos_base",
    ],
)

ocaml_module(
    name = "media_type",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
    ],
    sig = ":media_type__sig",
    struct = ":media_type.ml",
    deps = [
        "@ocaml//lib/resto-cohttp",
        "@tezos//src/lib_base:#Tezos_base",
    ],
)

# okapi:public_name tezos-rpc-http
ocaml_ns_archive(
    name = "#Tezos_rpc_http",
    submodules = [
        ":RPC_client_errors",
        ":media_type",
    ],
    visibility = ["//visibility:public"],
)

ocaml_signature(
    name = "RPC_client__sig",
    src = ":RPC_client.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_rpc_http",
    ],
    deps = [
        ":RPC_client_errors",
        ":media_type",
        "@ocaml//lib/resto-cohttp-client",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http",
    ],
)

ocaml_module(
    name = "RPC_client",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_rpc_http",
    ],
    sig = ":RPC_client__sig",
    struct = ":RPC_client.ml",
    deps = [
        ":RPC_client_errors",
        ":media_type",
        "@ocaml//lib/resto-cohttp-client",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http",
    ],
)

# okapi:public_name tezos-rpc-http-client
ocaml_ns_archive(
    name = "#Tezos_rpc_http_client",
    submodules = [":RPC_client"],
    visibility = ["//visibility:public"],
)

ocaml_signature(
    name = "RPC_client_unix__sig",
    src = ":RPC_client_unix.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_rpc_http_client",
    ],
    deps = [
        ":RPC_client",
        "@ocaml//lib/cohttp-lwt-unix",
        "@ocaml//lib/resto-cohttp-client",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

ocaml_module(
    name = "RPC_client_unix",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_rpc_http_client",
    ],
    sig = ":RPC_client_unix__sig",
    struct = ":RPC_client_unix.ml",
    deps = [
        ":RPC_client",
        "@ocaml//lib/cohttp-lwt-unix",
        "@ocaml//lib/resto-cohttp-client",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http_client",
        "@tezos//src/lib_stdlib_unix:#Tezos_stdlib_unix",
    ],
)

# okapi:public_name tezos-rpc-http-client-unix
ocaml_ns_archive(
    name = "#Tezos_rpc_http_client_unix",
    submodules = [":RPC_client_unix"],
    visibility = ["//visibility:public"],
)

ocaml_signature(
    name = "RPC_logging__sig",
    src = ":RPC_logging.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_rpc_http",
    ],
    deps = [
        "@ocaml//lib/resto-acl",
        "@ocaml//lib/resto-cohttp-server",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http",
    ],
)

ocaml_module(
    name = "RPC_logging",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_rpc_http",
    ],
    sig = ":RPC_logging__sig",
    struct = ":RPC_logging.ml",
    deps = [
        "@ocaml//lib/resto-acl",
        "@ocaml//lib/resto-cohttp-server",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http",
    ],
)

ocaml_signature(
    name = "RPC_server__sig",
    src = ":RPC_server.mli",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_rpc_http",
    ],
    deps = [
        ":RPC_logging",
        ":media_type",
        "@ocaml//lib/resto-acl",
        "@ocaml//lib/resto-cohttp-server",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http",
    ],
)

ocaml_module(
    name = "RPC_server",
    opts = [
        "-open",
        "Tezos_base__TzPervasives",
        "-open",
        "Tezos_rpc",
        "-open",
        "Tezos_rpc_http",
    ],
    sig = ":RPC_server__sig",
    struct = ":RPC_server.ml",
    deps = [
        ":RPC_logging",
        ":media_type",
        "@ocaml//lib/resto-acl",
        "@ocaml//lib/resto-cohttp-server",
        "@tezos//src/lib_base:#Tezos_base",
        "@tezos//src/lib_rpc_http:#Tezos_rpc_http",
    ],
)

# okapi:public_name tezos-rpc-http-server
ocaml_ns_archive(
    name = "#Tezos_rpc_http_server",
    submodules = [
        ":RPC_logging",
        ":RPC_server",
    ],
    visibility = ["//visibility:public"],
)
